[{"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/PasswordEmail.js":"1","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/sidebar/Side.js":"2","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/hamburger-menu/MenuButton.js":"3","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/personal/PersonalLoan.js":"4","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/salary/WorkInformation.js":"5","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/personal/GuarantorInformation.js":"6","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/salary/SalaryLoan.js":"7","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/personal/WorkInformation.js":"8","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/Loan.js":"9","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/home/Home.js":"10","/home/onoja/Documents/applications/gare-finance/gare-client/src/store/reducers/loan.js":"11","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/transaction/Transaction.js":"12","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/EmailVerified.js":"13","/home/onoja/Documents/applications/gare-finance/gare-client/src/helper/LocalStorageAuth.js":"14","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/hamburger-menu/MenuItem.js":"15","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/profile/employment/Employment.js":"16","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/business/LoanComponent.js":"17","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/personal/LoanComponent.js":"18","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/App.js":"19","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/login/Login.js":"20","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/hamburger-menu/MenuContainer.js":"21","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/personal/AccountInformation.js":"22","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/salary/LoanComponent.js":"23","/home/onoja/Documents/applications/gare-finance/gare-client/src/index.js":"24","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/registration/Register.js":"25","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/hamburger-menu/Menu.js":"26","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/business/AccountInformation.js":"27","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/contents/TabSideBar.js":"28","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/contents/Content.js":"29","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/Forgot_password.js":"30","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/business/BusinessLoan.js":"31","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/business/GuarantorInformation.js":"32","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/ResetPassword.js":"33","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/Pagination/Pagination.js":"34","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/BookingsLoan/BookingsLoan.js":"35","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/Prepage.js":"36","/home/onoja/Documents/applications/gare-finance/gare-client/src/store/actions/actions_loan/index.js":"37","/home/onoja/Documents/applications/gare-finance/gare-client/src/store/reducers/reducer_upload.js":"38","/home/onoja/Documents/applications/gare-finance/gare-client/src/helper/authenticate.js":"39","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/profile/bvn/BVN.js":"40","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/salary/AccountInformation.js":"41","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/profile/Profile.js":"42","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/savings/Savings.js":"43","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/profile/personalInfo/PersonalInfo.js":"44","/home/onoja/Documents/applications/gare-finance/gare-client/src/store/reducers/account_reducer.js":"45","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/salary/HRInformation.js":"46","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/profile/bank/Bank.js":"47","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/header/Headers.js":"48","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/business/BusinessInformation.js":"49","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/payment/Payment.js":"50","/home/onoja/Documents/applications/gare-finance/gare-client/src/store/reducers/index.js":"51","/home/onoja/Documents/applications/gare-finance/gare-client/src/store/reducers/onboarding_reducer.js":"52","/home/onoja/Documents/applications/gare-finance/gare-client/src/store/actions/actions_onboarding/index.js":"53","/home/onoja/Documents/applications/gare-finance/gare-client/src/store/actions/account/index.js":"54","/home/onoja/Documents/applications/gare-finance/gare-client/src/store/actions/action_file_upload/index.js":"55"},{"size":1235,"mtime":1610643112264,"results":"56","hashOfConfig":"57"},{"size":1559,"mtime":1616429305068,"results":"58","hashOfConfig":"57"},{"size":1731,"mtime":1612453861258,"results":"59","hashOfConfig":"57"},{"size":15835,"mtime":1617016077280,"results":"60","hashOfConfig":"57"},{"size":6541,"mtime":1615967338832,"results":"61","hashOfConfig":"57"},{"size":3759,"mtime":1613639988412,"results":"62","hashOfConfig":"57"},{"size":15213,"mtime":1617015578485,"results":"63","hashOfConfig":"57"},{"size":7600,"mtime":1617022658883,"results":"64","hashOfConfig":"57"},{"size":13285,"mtime":1616587902622,"results":"65","hashOfConfig":"57"},{"size":13662,"mtime":1616428812218,"results":"66","hashOfConfig":"57"},{"size":4876,"mtime":1616509275066,"results":"67","hashOfConfig":"57"},{"size":10054,"mtime":1616428848379,"results":"68","hashOfConfig":"57"},{"size":2206,"mtime":1615194155338,"results":"69","hashOfConfig":"57"},{"size":360,"mtime":1610610640600,"results":"70","hashOfConfig":"57"},{"size":2078,"mtime":1616421696795,"results":"71","hashOfConfig":"57"},{"size":5849,"mtime":1617036895076,"results":"72","hashOfConfig":"57"},{"size":2528,"mtime":1617012392808,"results":"73","hashOfConfig":"57"},{"size":3570,"mtime":1617016041223,"results":"74","hashOfConfig":"57"},{"size":1806,"mtime":1617121040688,"results":"75","hashOfConfig":"57"},{"size":4263,"mtime":1617029565475,"results":"76","hashOfConfig":"57"},{"size":1775,"mtime":1612454607633,"results":"77","hashOfConfig":"57"},{"size":4352,"mtime":1617014262870,"results":"78","hashOfConfig":"57"},{"size":2383,"mtime":1617012893273,"results":"79","hashOfConfig":"57"},{"size":889,"mtime":1615294243920,"results":"80","hashOfConfig":"57"},{"size":8331,"mtime":1617029045989,"results":"81","hashOfConfig":"57"},{"size":1020,"mtime":1612449538343,"results":"82","hashOfConfig":"57"},{"size":3406,"mtime":1617106245725,"results":"83","hashOfConfig":"57"},{"size":1691,"mtime":1616420586800,"results":"84","hashOfConfig":"57"},{"size":3387,"mtime":1616420612336,"results":"85","hashOfConfig":"57"},{"size":4430,"mtime":1615194129437,"results":"86","hashOfConfig":"57"},{"size":15449,"mtime":1617012278363,"results":"87","hashOfConfig":"57"},{"size":2597,"mtime":1614589252907,"results":"88","hashOfConfig":"57"},{"size":5515,"mtime":1615194210618,"results":"89","hashOfConfig":"57"},{"size":1239,"mtime":1615222106888,"results":"90","hashOfConfig":"57"},{"size":8333,"mtime":1617121252674,"results":"91","hashOfConfig":"57"},{"size":763,"mtime":1616752608596,"results":"92","hashOfConfig":"57"},{"size":9528,"mtime":1616586961553,"results":"93","hashOfConfig":"57"},{"size":1324,"mtime":1614677617953,"results":"94","hashOfConfig":"57"},{"size":483,"mtime":1610610640600,"results":"95","hashOfConfig":"57"},{"size":2879,"mtime":1617036392157,"results":"96","hashOfConfig":"57"},{"size":2799,"mtime":1617013134163,"results":"97","hashOfConfig":"57"},{"size":24943,"mtime":1617035918864,"results":"98","hashOfConfig":"57"},{"size":153,"mtime":1611133729708,"results":"99","hashOfConfig":"57"},{"size":5800,"mtime":1617035542594,"results":"100","hashOfConfig":"57"},{"size":4631,"mtime":1614249956456,"results":"101","hashOfConfig":"57"},{"size":1832,"mtime":1617013373171,"results":"102","hashOfConfig":"57"},{"size":4282,"mtime":1617037063529,"results":"103","hashOfConfig":"57"},{"size":1341,"mtime":1614600336848,"results":"104","hashOfConfig":"57"},{"size":2198,"mtime":1614590679637,"results":"105","hashOfConfig":"57"},{"size":1728,"mtime":1617114534685,"results":"106","hashOfConfig":"57"},{"size":332,"mtime":1613565907679,"results":"107","hashOfConfig":"57"},{"size":4237,"mtime":1615458149530,"results":"108","hashOfConfig":"57"},{"size":7937,"mtime":1615472082551,"results":"109","hashOfConfig":"57"},{"size":9342,"mtime":1614588312450,"results":"110","hashOfConfig":"57"},{"size":2042,"mtime":1614674276713,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fx8iao",{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/PasswordEmail.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/sidebar/Side.js",["242"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport 'remixicon/fonts/remixicon.css'\nimport Auth from \"../../../helper/LocalStorageAuth\"\nimport { Layout, Menu } from 'antd';\nimport { AppstoreFilled, PieChartFilled, CreditCardFilled, DollarCircleFilled } from '@ant-design/icons';\nimport \"./Sidebar.css\"\n\n// const { SubMenu } = Menu;\nconst { Sider } = Layout;\n\nconst SideBar = () => {\n  const handleLogout = () => {\n    Auth.deauthenticateUser();\n    window.location.href = \"/\";\n  }\n\n  return (\n    <Sider width={350}>\n      <Menu\n        mode=\"inline\"\n        defaultSelectedKeys={['1']}\n        defaultOpenKeys={['sub1']}\n        style={{ height: '100%', borderRight: 0, background: \"#f5f5f5\" }}\n      >\n        <Menu.Item key=\"1\" className=\"menu\">\n          <Link to=\"/account\">\n            <AppstoreFilled className=\"sidebar-icon\" /> Dashboard \n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n          <Link to=\"/account/loan\">\n            <PieChartFilled /> Loan\n          </Link>\n        </Menu.Item>\n        \n        <Menu.Item key=\"4\">\n          <Link to=\"/account/transactions\">\n            <CreditCardFilled /> Transaction\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"5\">\n          <Link to=\"/account/profile\">\n            <i className=\"ri-user-3-fill\"></i> Profile\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"6\" onClick={handleLogout}>\n        <i className=\"ri-logout-box-r-fill\"></i> Logout\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  )\n}\n\nexport default SideBar;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/hamburger-menu/MenuButton.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/personal/PersonalLoan.js",["243"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card, CardBody, Col, Row, Modal, ModalBody, Spinner, Alert } from \"reactstrap\";\nimport { Button, Steps } from \"antd\";\nimport \"./Personal.css\";\nimport LoanComponent from \"./LoanComponent\";\nimport WorkInformation from \"./WorkInformation\";\nimport GuarantorInformation from \"./GuarantorInformation\";\nimport AccountInformation from \"./AccountInformation\";\nimport { uploader } from \"../../../../store/actions/action_file_upload\";\nimport { postLoan } from \"../../../../store/actions/actions_loan\";\nimport { localStorageAuth } from \"../../../../helper/authenticate\"\n\nconst { Step } = Steps;\n\nconst PersonalLoan = ({ userDetails }) => {\n  const loan = useSelector(state => state.loan);\n  const upload = useSelector(state => state.upload);\n  const dispatch = useDispatch();\n  const [ count, setCount ] = useState(0);\n  const [ errorMsg, setErrorMsg ] = useState([]);\n  const [ error, setError ] = useState(\"\");\n  const [ message, setMessage ] = useState(\"\");\n  const [ amount, setAmount ] = useState(0);\n  const [ tenure, setTenure ] = useState(0);\n  const [ purpose, setPurpose ] = useState(\"\");\n  const [ relManager, setRelManager ] = useState(\"\");\n  const [ fullName, setFullName ] = useState(\"\");\n  const [ phoneNumber, setPhoneNumber ] = useState(\"\");\n  const [ email, setEmail ] = useState(\"\");\n  const [ companyName, setCompanyName ] = useState(\"\");\n  const [ salary, setSalary ] = useState(0);\n  const [ workID, setWorkID ] = useState(\"\");\n  const [ payday, setPayday ] = useState(0);\n  const [ address, setAddress ] = useState(\"\");\n  const [ confirmation, setConfirm ] = useState(false);\n  const [ bankName, setBankName ] = useState(\"\");\n  const [ accountName, setAccountName ] = useState(\"\");\n  const [ accountNumber, setAccountNumber ] = useState(\"\");\n  const [ accountType, setAccountType ] = useState(\"\");\n  const [ photo, setPhoto ] = useState({});\n  const [ relationship, setRelationship ] = useState(\"\");\n  const [ monthlyRemitance, setMonthlyRemittance ] = useState(0);\n  const [ isAttested, setIsAttested] = useState(null);\n  const userId = localStorageAuth().user && localStorageAuth().user._id;\n  const attestation = useRef(null);\n\n  const sessionCode = localStorage.getItem(\"sessionCode\");\n\n  const handleAmount = (e) => {\n    setErrorMsg(\"\")\n    setAmount(e.target.value);\n  }\n\n  const handleTenure = (e) => {\n    setErrorMsg(\"\");\n    setTenure(e.target.value);\n  }\n\n  const handlePurpose = (e) => {\n    setErrorMsg(\"\");\n    setPurpose(e.target.value);\n  }\n\n  const handleRelManage = (e) => {\n    setErrorMsg(\"\");\n    setRelManager(e.target.value);\n  }\n\n  const handleEmail = (e) => {\n    setErrorMsg(\"\");\n    setEmail(e.target.value)\n  }\n\n  const handleFullname = (e) => {\n    setErrorMsg(\"\");\n    setFullName(e.target.value);\n  }\n\n  const handleRelationship = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\");\n    setRelationship(e.target.value);\n  }\n\n  const handlePhoneNumber = (e) => {\n    setErrorMsg(\"\");\n    setPhoneNumber(e.target.value);\n  }\n\n  const handlePayDay = (e) => {\n    setErrorMsg(\"\");\n    setPayday(e.target.value);\n  }\n\n  const handleSalary = (e) => {\n    setErrorMsg(\"\");\n    setSalary(e.target.value);\n  }\n\n  const handleCompanyName = (e) => {\n    setErrorMsg(\"\");\n    setCompanyName(e.target.value);\n  }\n\n  const handleAddress = (e) => {\n    setError(\"\");\n    setErrorMsg(\"\");\n    setAddress(e.target.value);\n  }\n\n  useEffect(() => {\n    if (tenure > 0 && amount > 0) {\n      setMonthlyRemittance(amount * 0.06 + (amount/tenure))\n    }\n  }, [ amount, tenure ]);\n\n  useEffect(() => {\n    if (upload && upload.success) {\n      setWorkID(upload.idCard && upload.idCard.secure_url);\n    }\n  }, [ upload ]);\n\n  useEffect(() => {\n    if (userDetails) {\n      const firstName = userDetails.bank && userDetails.bank.owner && userDetails.bank.owner.firstName;\n      const lastName = userDetails.bank && userDetails.bank.owner && userDetails.bank.owner.lastName;\n      const accountNumber = userDetails.bank && userDetails.bank.accountNumber;\n      const accountType = userDetails.bank && userDetails.bank.accountType;\n      const name = userDetails.bank && userDetails.bank.name;\n      const accountName =  firstName + \" \" + lastName;\n\n      setAccountName(accountName);\n      setBankName(name);\n      setAccountType(accountType);\n      setAccountNumber(accountNumber)\n    }\n  }, [ userDetails ]);\n  \n  const formData = new FormData();\n\n  formData.append('file', photo);\n  // replace this with your upload preset name\n  formData.append('upload_preset', \"gare-upload-preset\");\n\n  const options = {\n    method: 'POST',\n    body: formData,\n  };\n\n  const handlePhoto = (e) => {\n    setErrorMsg(\"\");\n    setErrorMsg(\"\")\n    setPhoto(e.target.files[0]);\n  }\n\n  useEffect(() => {\n    if (photo && photo.name) {\n      dispatch(uploader(options));\n    }\n  }, [ photo, dispatch ]);\n\n                        \n  useEffect(() => {\n    if (loan && loan.success) {\n      setMessage(\"Your request has been sent successfully. We get back to you within the next 48 to 72 hours\");\n      setTimeout(() => { \n        setMessage(\"\");\n        setConfirm(false);\n        // window.location.href = \"/account\";\n      }, 4000);\n      \n    }\n  }, [ loan ]);\n\n  useEffect(() => {\n    if (loan && loan.error) {\n      setErrorMsg(loan.error);\n      if (!Array.isArray(loan.error)) setError(loan.error);\n    }\n  }, [ loan ]);\n\n  const handleSubmit = () => {\n    const data = {\n      address,\n      amount: parseInt(amount),\n      tenure: parseInt(tenure),\n      purpose,\n      relManager,\n      relationship,\n      salary: parseInt(salary),\n      payday,\n      companyName,\n      workID,\n      userId: userId,\n      amountToPay: parseInt(amount) + parseInt(monthlyRemitance),\n      email,\n      phoneNumber,\n      fullName,\n      accountName, \n      accountNumber,\n      accountType,\n      category: \"personal\",\n      bankName,\n      sessionCode,\n    }\n\n    dispatch(postLoan(data));\n  }\n\n  const toggleConfirmation = () => {\n    setConfirm(false);\n  }\n\n  const handleCancelReqeust = () => {\n    setMonthlyRemittance(0);\n    setAddress(\"\");\n    setAmount(\"\");\n    setTenure(\"\");\n    setPurpose(\"\");\n    setRelManager(\"\");\n    setRelationship(\"\");\n    setSalary(\"\");\n    setPayday(\"\");\n    setCompanyName(\"\");\n    setWorkID(\"\");\n    setEmail(\"\");\n    setFullName(\"\");\n    setAccountNumber(\"\");\n    setAccountName(\"\");\n    setAccountType(\"\");\n    setBankName(\"\");\n    setConfirm(false);\n  }\n\n  const handleAttestation = () => {\n    setIsAttested(attestation.current && attestation.current.checked);\n  }\n  \n  return (\n    <Card className=\"salary-card-container\">\n      <CardBody>\n        <h4><strong>Personal Loan</strong></h4>\n        <p>\n          This loan is set for salary earners who works with structured organizations. \n          It has a tenure of 30 to 180 days with the amount ranging from N100, 000.00 to N5, 000, 000. 00.\n        </p>\n        <Row className=\"mt-4 mb-3\">\n          <Col xs=\"10\" xl=\"9\" className=\"steps\">\n            <Steps current={count} size=\"small\">\n              <Step title={\"Loan\"} />\n              <Step title=\"Work Information\" />\n              <Step title=\"Guarantor Information\" />\n              <Step title=\"Account Information\" />\n            </Steps>\n          </Col>\n        </Row>\n        {count === 0 ?\n          <LoanComponent\n            amount={amount}\n            tenure={tenure}\n            purpose={purpose}\n            relManager={relManager}\n            handleAmount={handleAmount}\n            handlePurpose={handlePurpose}\n            handleRelManage={handleRelManage}\n            handleTenure={handleTenure}\n            errorMsg={errorMsg}\n            message={message}\n            error={error}\n          /> : count === 1 ? \n          <WorkInformation\n            salary={salary}\n            payday={payday}\n            companyName={companyName}\n            handlePayDay={handlePayDay}\n            handleSalary={handleSalary}\n            handleCompanyName={handleCompanyName}\n            handlePhoto={handlePhoto}\n            workID={workID}\n            message={message}\n            upload={upload}\n            error={error}\n            errorMsg={errorMsg}\n          /> : count === 2 ? \n          <GuarantorInformation\n            email={email}\n            phoneNumber={phoneNumber}\n            fullName={fullName}\n            address={address}\n            handleAddress={handleAddress}\n            handleEmailAddress={handleEmail}\n            handlePhoneNumber={handlePhoneNumber}\n            handleFullname={handleFullname}\n            handleRelationship={handleRelationship}\n            errorMsg={errorMsg}\n            message={message}\n            error={error}\n          /> : \n          <AccountInformation \n            handleAttestation={handleAttestation} \n            userDetails={userDetails} \n            attestation={attestation}\n            isAttested={isAttested}\n          />\n        }\n       \n        <Row className=\"mt-5\">\n          <Col xs=\"12\" xl=\"8\" className=\"\">\n          </Col>\n          <Col xs=\"12\" xl=\"4\" className=\"\">\n            <Row>\n              <Col xs=\"6\" xl=\"6\" className=\"pt-3\">\n                {count > 0 ? (\n                  <span className=\"prev-button\" onClick={() => setCount(count - 1)}>Previous</span>\n                ) : null}\n              </Col>\n              <Col xs=\"6\" xl=\"6\">\n                {count === 3 ? \n                <Button disabled={count === 3 && isAttested === null ? true : count === 3 && isAttested === false ? true : false} id=\"next-button\" onClick={() => setConfirm(true)}>Continue</Button> : \n                <Button id=\"next-button\" onClick={() => setCount(count + 1)}>Next</Button>}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs=\"12\" xl=\"12\">\n            <Modal toggle={toggleConfirmation} isOpen={confirmation}>\n              <ModalBody>\n                <Row className=\"justify-content-center\">\n                  <Col xs=\"12\" xl=\"12\">\n                    {message.length > 0 ? <Alert color=\"success\">{message}</Alert> : null}\n                  </Col>\n                </Row>\n                <Row className=\"justify-content-center\">\n                  <Col xs=\"12\" xl=\"12\">\n                    {error.length > 0 ? <Alert color=\"danger\">{error}</Alert> : null}\n                  </Col>\n                </Row>\n                <Row className=\"justify-content-center mt-5\">\n                  <Col xs=\"12\" xl=\"12\">\n                    <Row className=\"justify-content-center\">\n                      <Col xs=\"12\" xl=\"11\">\n                        <p className=\"mt-2 text-center\">You pay</p>\n                        <h3 className=\"text-center remittance\"><strong>&#8358;{monthlyRemitance}</strong></h3>\n                        <p className=\"text-center tenure-text\">For {tenure} months</p>\n                        <p>Click Submit Application to Submit Loan Request or click Cancel to Discard this Loan request.</p>\n                      </Col>\n                    </Row>\n                    \n                    <Row className=\"justify-content-center\">\n                      <Col xs=\"12\" xl=\"11\">\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"relManager\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"companyName\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"relationship\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"payday\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"accountNumber\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"fullName\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"amount\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"phoneNumber\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"email\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"address\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"accountType\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"salary\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"payday\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"tenure\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"wordID\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                        {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"purpose\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n                      </Col>\n                    </Row>\n                    \n                    <Row className=\"mt-5 ml-4 mb-5\">\n                      <Col xs=\"6\" xl=\"6\">\n                        <Button className=\"loan-cancel-button\" onClick={handleCancelReqeust}>Cancel application</Button>\n                      </Col>\n                      <Col xs=\"6\" xl=\"6\">\n                        {loan.loading ?\n                          <Spinner /> : \n                          (<Button className=\"loan-submit-button\" onClick={handleSubmit}>Submit application</Button>)\n                        }\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </ModalBody>\n            </Modal>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default PersonalLoan;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/salary/WorkInformation.js",["244","245"],"import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Row, Input, Alert, Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport { Button } from \"antd\";\nimport { useDropzone } from \"react-dropzone\";\nimport { employmentInformation } from \"../../../../store/actions/account\";\nimport Employment from \"../../profile/employment/Employment\";\nimport { localStorageAuth } from \"../../../../helper/authenticate\";\n\nconst WorkInformation = ({\n  salary,\n  payday,\n  companyName,\n  handlePayDay,\n  handleSalary,\n  handleCompanyName,\n  handleWorkId,\n  upload,\n  uploadedID,\n  // errorMsg,\n}) => {\n\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n  }, []);\n  const dispatch = useDispatch();\n  const account = useSelector(state => state.accountReducer);\n  const [ toggle, setToggle ] = useState(false);\n  const [ errorMsg, setErrorMsg ] = useState([]);\n  const [ error, setError ] = useState(\"\");\n  const [ message, setMessage ] = useState(\"\");\n  const [ company_name, setCompanyName ] = useState(\"\");\n  const [ company_address, setCompanyAddress ] = useState(\"\");\n  const [ jobPosition, setJopPosition ] = useState(\"\");\n  const [ employmentStatus, setEmploymentStatus ] = useState(\"\");\n  const [ userDetails, setUserDetails ] = useState({});\n  const employmentType = [ \"full time\", \"part time\", \"contract\", \"outsourced\", \"self employed\" ];\n\n  const userId = localStorageAuth().user && localStorageAuth().user._id;\n  \n  const { getRootProps, getInputProps, isDragActive } = useDropzone({onDrop});\n\n  console.log(account, \" this is the account state\");\n\n  useEffect(() => {\n    if (account && account.account) {\n      setUserDetails(account.account && account.account);\n    }\n  }, []);\n\n  // Employment information handler here\n  useEffect(() => {\n    if (account && account.error) {\n      setErrorMsg(account.error);\n      if (!Array.isArray(account.error))  setError(account.error);\n    }\n  }, [ account ]);\n\n  useEffect(() => {\n    if (account.employmentSuccess === true) {\n      setMessage(\"Your employment information has been updated\");\n      setEmploymentStatus(\"\");\n      setCompanyAddress(\"\");\n      setJopPosition(\"\");\n      setCompanyName(\"\");\n      setTimeout(() => {\n        setMessage(\"\")\n        setToggle(false);\n      }, 1500);\n    }\n  }, [ account ]);\n\n  \n\n  const handleCompanyAddress = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setCompanyAddress(e.target.value);\n  }\n\n  const handleJobPosition = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setJopPosition(e.target.value);\n  }\n\n  const handleEmploymentType = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setEmploymentStatus(e.target.value);\n  }\n\n  const handleEmploymentSubmit = () => {\n    const data = { \n      employmentType: \n      employmentStatus, \n      company_address, company_name, \n      jobPosition, \n      userId,\n    }\n    dispatch(employmentInformation(data));\n  }\n\n  const handleEmploymentClear = () => {\n    setEmploymentStatus(\"\");\n    setCompanyAddress(\"\");\n    setJopPosition(\"\");\n    setCompanyName(\"\");\n    setToggle(false);\n  }\n\n  const toggleEmployment = () => {\n    setToggle(!toggle);\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <Row className=\"mt-2\">\n            <Col xs=\"12\" xl=\"8\">\n              <label htmlFor=\"amount\">Name of Company</label>\n              <Input value={companyName} onChange={(e) => handleCompanyName(e)} placeholder=\"Name of Company\" className=\"form-control\" />\n            </Col>\n            <Col xs=\"12\" xl=\"4\" className=\"pt-5\">\n              <Button onClick={() => setToggle(true)} className=\"change-button\">Change</Button>\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col xs=\"12\" xl=\"6\">\n              <label htmlFor=\"salary\">Monthly Salary</label>\n              <Input onChange={(e) => handleSalary(e)} id=\"salary\" value={salary} placeholder=\"Monthly Salary\" className=\"form-control\" />\n            </Col>\n            <Col xs=\"12\" xl=\"6\">\n              <label htmlFor=\"payday\">Pay day</label>\n              <Input onChange={(e) => handlePayDay(e)} value={payday}  min=\"1\" max=\"31\" type=\"number\" id=\"payday\" placeholder=\"26\" className=\"form-control\" />\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col xs=\"12\" xl=\"12\">\n              <label>Upload your work ID card</label>\n              <div {...getRootProps()} className=\"text-center file-uploader mb-4\">\n                {uploadedID && uploadedID.length > 0 ? <img src={uploadedID} alt=\"identity\" style={{ width: \"100%\", height: \"100%\" }} /> : (\n                  <>\n                    <input {...getInputProps()} accept=\"image/jpeg,image/jpg, image/png\" onChange={(e) => handleWorkId(e)} />\n                    <i className=\"ri-folder-reduce-fill\"></i>\n                    {\n                      isDragActive ?\n                        <p style={{ color: \"#00000045\"}}>Drop the files here ...</p> :\n                        <p style={{ color: \"#00000045\"}}>Drag 'n' drop some files here, or click to select files</p>\n                    }\n                  </>\n                )}\n              </div>\n              {upload.loading ? <Alert color=\"info\">Please wait. Uploading work ID...</Alert> : upload.success ? \n              <Alert color=\"success\">Work ID uploaded</Alert> : null}\n            </Col>\n          </Row>\n        </Col>\n        <Col xs=\"12\" xl=\"6\"></Col>\n      </Row>\n      <Row>\n        <Modal isOpen={toggle} toggle={toggleEmployment}>\n          <ModalHeader toggle={toggleEmployment}></ModalHeader>\n          <ModalBody>\n            <Employment \n              setEmployment={setToggle}\n              message={message}\n              error={error}\n              errorMsg={errorMsg}\n              company_name={company_name}\n              company_address={company_address}\n              jobPosition={jobPosition}\n              employmentStatus={employmentStatus}\n              employmentType={employmentType}\n              userId={userId}\n              handleEmploymentClear={handleEmploymentClear}\n              handleEmploymentSubmit={handleEmploymentSubmit}\n              handleEmploymentType={handleEmploymentType}\n              handleCompanyAddress={handleCompanyAddress}\n              handleCompanyName={handleCompanyName}\n              handleJobPosition={handleJobPosition}\n              account\n            />\n          </ModalBody>\n        </Modal>\n      </Row>\n    </div>\n  );\n}\n\nexport default WorkInformation;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/personal/GuarantorInformation.js",["246"],"import React from \"react\";\nimport { Col, Row, Input } from \"reactstrap\";\n// import { Button } from \"antd\";\nimport \"./Personal.css\";\n\nconst GuarantorInformation = ({\n  fullName,\n  emailAddress,\n  handlePhoneNumber,\n  handleFullname,\n  handleRelationship,\n  relationship,\n  handleEmailAddress,\n  phoneNumber,\n  address,\n  handleAddress,\n  errorMsg,\n}) => {\n  return (\n    <div>\n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <Row className=\"mt-2\">\n            <Col xs=\"12\" xl=\"12\">\n              <label htmlFor=\"amount\">Full Name</label>\n              <Input value={fullName} onChange={(e) => handleFullname(e)} placeholder=\"Full name\" className=\"form-control\" />\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"fullName\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n\n            </Col>\n           \n          </Row>\n          <Row className=\"mt-3\">\n            <Col xs=\"12\" xl=\"6\">\n              <label htmlFor=\"salary\">Relationship</label>\n              <Input \n                onChange={(e) => handleRelationship(e)} \n                id=\"salary\" value={relationship} \n                type=\"select\"\n              >\n                <option>Guarantor relationship</option>\n                <option value=\"brother\">Brother</option>\n                <option value=\"father\">Father</option>\n                <option value=\"mother\">Mother</option>\n                <option value=\"sister\">Sister</option>\n                <option value=\"uncle\">Uncle</option>\n                <option value=\"wife\">Wife</option>\n              </Input>\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"relationship\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n            <Col xs=\"12\" xl=\"6\">\n              <label htmlFor=\"payday\">Phone Number</label>\n              <Input onChange={(e) => handlePhoneNumber(e)} value={phoneNumber} id=\"payday\" placeholder=\"+2348023114422\" className=\"form-control\" />\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"phoneNumber\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col xs=\"12\" xl=\"12\">\n              <label htmlFor=\"email\">Email Address</label>\n              <Input value={emailAddress} onChange={(e) => handleEmailAddress(e)} value={emailAddress} id=\"email\" placeholder=\"Email address\" className=\"form-control\" />\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"email\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n          </Row>\n\n          <Row className=\"mt-3\">\n            <Col xs=\"12\" xl=\"12\">\n              <label htmlFor=\"businessAddress\">Business Address</label>\n              <Input \n                onChange={(e) => handleAddress(e)} \n                value={address} id=\"businessAddress\" \n                placeholder=\"319, Akin Ogunlewe Street, Off Ligali Ayorinde, VI, Lagos.\" \n                className=\"form-control\" />\n                {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"address\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n          </Row>\n        </Col>\n        <Col xs=\"12\" xl=\"6\">\n\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default GuarantorInformation;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/salary/SalaryLoan.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/personal/WorkInformation.js",["247"],"import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Row, Input, Alert, Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport { Button, Image } from \"antd\";\nimport { useDropzone } from \"react-dropzone\";\nimport { employmentInformation } from \"../../../../store/actions/account\";\nimport Employment from \"../../profile/employment/Employment\";\nimport { localStorageAuth } from \"../../../../helper/authenticate\";\nimport { Icon } from \"semantic-ui-react\";\n\n// don't forget to add errorMsg to the props list\nconst WorkInformation = ({salary, payday, handlePayDay, handleSalary, handlePhoto, workID, upload }) => {\n  const dispatch = useDispatch();\n  const account = useSelector(state => state.accountReducer);\n  const [ toggle, setToggle ] = useState(false);\n  const [ errorMsg, setErrorMsg ] = useState([]);\n  const [ error, setError ] = useState(\"\");\n  const [ message, setMessage ] = useState(\"\");\n  const [ company_name, setCompanyName ] = useState(\"\");\n  const [ company_address, setCompanyAddress ] = useState(\"\");\n  const [ jobPosition, setJopPosition ] = useState(\"\");\n  const [ employmentStatus, setEmploymentStatus ] = useState(\"\");\n  const [ userDetails, setUserDetails ] = useState({});\n  const employmentType = [ \"full time\", \"part time\", \"contract\", \"outsourced\", \"self employed\" ];\n\n  const userId = localStorageAuth().user && localStorageAuth().user._id;\n  const onDrop = useCallback(acceptedFiles => {}, []);\n  \n  const { getRootProps, getInputProps, isDragActive } = useDropzone({onDrop});\n\n  useEffect(() => {\n    if (account && account.account) {\n      setUserDetails(account.account && account.account);\n    }\n  }, []);\n\n  // Employment information handler here\n  useEffect(() => {\n    if (account && account.error) {\n      setErrorMsg(account.error);\n      if (!Array.isArray(account.error))  setError(account.error);\n    }\n  }, [ account ]);\n\n  useEffect(() => {\n    if (account.employmentSuccess === true) {\n      setMessage(\"Your employment information has been updated\");\n      setEmploymentStatus(\"\");\n      setCompanyAddress(\"\");\n      setJopPosition(\"\");\n      setCompanyName(\"\");\n      setTimeout(() => {\n        setMessage(\"\")\n        setToggle(false);\n      }, 1500);\n    }\n  }, [ account ]);\n\n  const handleCompanyName = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setCompanyName(e.target.value);\n  }\n\n  const handleCompanyAddress = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setCompanyAddress(e.target.value);\n  }\n\n  const handleJobPosition = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setJopPosition(e.target.value);\n  }\n\n  const handleEmploymentType = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setEmploymentStatus(e.target.value);\n  }\n\n  const handleEmploymentSubmit = () => {\n    const data = { \n      employmentType,\n      employmentStatus,\n      company_address,\n      companyName: company_name, \n      jobPosition, \n      userId,\n    }\n    \n    dispatch(employmentInformation(data));\n  }\n\n  const handleEmploymentClear = () => {\n    setEmploymentStatus(\"\");\n    setCompanyAddress(\"\");\n    setJopPosition(\"\");\n    setCompanyName(\"\");\n    setToggle(false);\n  }\n\n  const toggleEmployment = () => {\n    setToggle(!toggle);\n  }\n\n  useEffect(() => {\n    if (userDetails && userDetails.employmentId) {\n      setCompanyName(userDetails.employmentId && userDetails.employmentId.company_name);\n    }\n  }, [ userDetails ]);\n\n  return (\n    <div>\n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <Row className=\"mt-2\">\n            <Col xs=\"12\" xl=\"8\">\n              <label htmlFor=\"amount\">Name of Company</label>\n              <Input value={company_name} placeholder=\"Name of Company\" className=\"form-control\" />\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"companyName\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n            <Col xs=\"12\" xl=\"4\" className=\"pt-5\">\n              <Button onClick={() => setToggle(true)} className=\"change-button\">Change</Button>\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col xs=\"12\" xl=\"6\">\n              <label htmlFor=\"salary\">Monthly Salary</label>\n              <Input onChange={(e) => handleSalary(e)} id=\"salary\" value={salary} placeholder=\"Monthly Salary\" className=\"form-control\" />\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"salary\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n            <Col xs=\"12\" xl=\"6\">\n              <label htmlFor=\"payday\">Pay day</label>\n              <Input onChange={(e) => handlePayDay(e)} value={payday}  min=\"20\" max=\"31\" type=\"number\" id=\"payday\" placeholder=\"26\" className=\"form-control\" />\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"payday\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col xs=\"12\" xl=\"12\">\n              <label>Upload your work ID card</label>\n              <div {...getRootProps()} className=\"text-center p-file-uploader mb-4\">\n                {workID && workID.length > 0 ? <Image src={workID} alt=\"identity\" width=\"100%\" height=\"100%\" /> : (\n                  <>\n                    <input {...getInputProps()} accept=\"image/jpeg,image/jpg, image/png\" onChange={(e) => handlePhoto(e)} />\n                    <i className=\"ri-folder-reduce-fill\"></i>\n                    {\n                      isDragActive ?\n                        <Icon name='home' size='mini' />:\n                        <p style={{ color: \"#00000045\"}}>Upload</p>\n                    }\n                  </>\n                )}\n              </div>\n              {upload.loading ? <Alert color=\"info\">Please wait. Uploading means of identification...</Alert> : upload.success ? \n              <Alert color=\"success\">Means of identification uploaded</Alert> : null}\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"wordID\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n          </Row>\n        </Col>\n        <Col xs=\"12\" xl=\"6\"></Col>\n      </Row>\n      <Row>\n        <Modal isOpen={toggle} toggle={toggleEmployment}>\n          <ModalHeader toggle={toggleEmployment}></ModalHeader>\n          <ModalBody>\n            <Employment \n              setEmployment={setToggle}\n              message={message}\n              error={error}\n              errorMsg={errorMsg}\n              company_name={company_name}\n              company_address={company_address}\n              jobPosition={jobPosition}\n              employmentStatus={employmentStatus}\n              employmentType={employmentType}\n              userId={userId}\n              handleEmploymentClear={handleEmploymentClear}\n              handleEmploymentSubmit={handleEmploymentSubmit}\n              handleEmploymentType={handleEmploymentType}\n              handleCompanyAddress={handleCompanyAddress}\n              handleCompanyName={handleCompanyName}\n              handleJobPosition={handleJobPosition}\n              account\n            />\n          </ModalBody>\n        </Modal>\n      </Row>\n    </div>\n  );\n}\n\nexport default WorkInformation;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/Loan.js",["248","249"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card, CardBody, Col, Row, Modal, ModalBody, Input, ModalHeader, Alert } from \"reactstrap\";\nimport { Tooltip, Button, Slider, ConfigProvider } from \"antd\";\nimport { DollarCircleFilled } from \"@ant-design/icons\";\n\nimport \"./Loan.css\";\nimport PersonalLoan from \"./personal/PersonalLoan\";\nimport BusinessLoan from \"./business/BusinessLoan\";\nimport SalaryLoan from \"./salary/SalaryLoan\";\nimport { getUser } from \"../../../store/actions/account\";\nimport { localStorageAuth } from \"../../../helper/authenticate\";\nimport { creditLogin } from \"../../../store/actions/actions_onboarding\";\n\nconst Loan = () => {\n  const account = useSelector(state => state.accountReducer);\n  const cred = useSelector(state => state.account);\n  const dispatch = useDispatch();\n  const [ modal, setModal ] = useState(false);\n  const [ inputValue, setInputValue ] = useState(0);\n  const [ month, setMonth ] = useState(0);\n  const [ isMobile, setIsMobile ] = useState(false);\n  const [ monthlyRemittance, setMonthlyRemittance ] = useState(0);\n  const [ isBusinessLoan, setIsBusinessLoan ] = useState(false);\n  const [ isPersonalLoan, setIsPersonalLoan ] = useState(false);\n  const [ isSalaryLoan, setIsSalaryLoan ] = useState(false);\n  const [ userDetails, setUserDetails ] = useState({});\n  const [ profileError, setProfileError ] = useState(\"\");\n  const userId = localStorageAuth().user && localStorageAuth().user._id;\n\n  const toggle = () => {\n    setModal(false);\n  }\n\n  useEffect(() => {\n    const data = { userId };\n    dispatch(getUser(data));\n    dispatch(creditLogin());\n  }, []);\n\n  useEffect(() => {\n    if (account.userSuccess) {\n      setUserDetails(account.account);\n    }\n  }, [ account ]);\n\n  useEffect(() => {\n    if (month > 0 && inputValue > 0) {\n      setMonthlyRemittance(inputValue * 0.06 + (inputValue/month));\n    }\n  }, [ month, inputValue ]);\n\n  useEffect(() => {\n    if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){\n      // true for mobile device\n      setIsMobile(true);\n    } else {\n      setIsMobile(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (cred.creditSuccess) {\n      handleCreditLogin();\n    }\n  }, [ cred ]);\n\n  const handleCreditLogin = () => {\n    setInterval(() => {\n      dispatch(creditLogin());\n    }, 5400000);\n  }\n\n  const toggleBusinessLoan = () => {\n    const profilePercentage = parseInt(userDetails.profilePercentage && userDetails.profilePercentage);\n    if (profilePercentage !== 100) {\n      setProfileError(\"Your profile is incomplete. You'll be redirected to your profile page to complete your profile before continuing\");\n      setTimeout(() => {\n        window.location.href = \"/account/profile\";\n      }, 2500);\n      \n      return;\n    }\n    setIsBusinessLoan(true);\n    setIsPersonalLoan(false);\n    setIsSalaryLoan(false);\n  }\n\n  const toggleSalaryLoan = () => {\n    const profilePercentage = parseInt(userDetails.profilePercentage && userDetails.profilePercentage);\n\n    if (profilePercentage !== 100) {\n      setProfileError(\"Your profile is incomplete. You'll be redirected to your profile page to complete your profile before continuing\");\n      setTimeout(() => {\n        window.location.href = \"/account/profile\";\n      }, 2500);\n      \n      return;\n    }\n    setIsBusinessLoan(false);\n    setIsPersonalLoan(false);\n    setIsSalaryLoan(true);\n  }\n\n  const togglePersonalLoan = () => {\n    const profilePercentage = parseInt(userDetails.profilePercentage && userDetails.profilePercentage);\n\n    if (profilePercentage !== 100) {\n      setProfileError(\"Your profile is incomplete. You'll be redirected to your profile page to complete your profile before continuing\");\n      setTimeout(() => {\n        window.location.href = \"/account/profile\";\n      }, 5000);\n      \n      return;\n    }\n    setIsBusinessLoan(false);\n    setIsPersonalLoan(true);\n    setIsSalaryLoan(false);\n  }\n\n  const personalLoanText = \n  <div className=\"personalText\" style={{ \n      overflow: \"hidden\", \n      padding: \"20px\",\n      // width: isMobile ? \"300px\" : \"\"\n    }}\n  >\n    <p style={{ fontSize: \"41px\", color: \"#E87C23\"}}>Personal Loan</p>\n    <p style={{ marginTop: \"-30px\", fontSize: \"16px\"}}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dignissim luctus purus, nec varius tortor porttitor a. \n    Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aenean tincidunt aliquet \n    sem, quis faucibus ex maximus ac. Nullam dignissim, dui et pellentesque fringilla, turpis nisi varius augue, at congue \n    purus mauris at massa. Phasellus consequat consequat erat. Maecenas lorem sem, feugiat nec lacinia id, molestie a augue. \n    Fusce scelerisque, quam eget venenatis posuere, enim purus rutrum libero, in fringilla libero dui vitae diam. Integer a \n    faucibus ligula, vitae finibus lacus. Mauris vitae quam non risus tristique mattis at vel elit. Maecenas volutpat placerat \n    tincidunt. Vivamus sit amet urna id arcu tincidunt viverra id eget neque. Proin facilisis interdum tortor, sagittis \n    maximus massa lobortis ut.</p>\n    <Button \n      className=\"tool-tip-button\"\n      onClick={togglePersonalLoan}\n    >Start</Button>\n  </div>\n  \n  const salaryLoanText = \n  <div className=\"salaryText\" style={{ \n    overflow: \"hidden\", \n    padding: \"20px\",\n    // width: isMobile ? \"300px\" : \"\"\n    }}\n  >\n    <p style={{ fontSize: \"41px\", color: \"#8625CF\"}}>Salary Advance Loan</p>\n    <p style={{ marginTop: \"-30px\", fontSize: \"16px\"}}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dignissim luctus purus, nec varius tortor porttitor a. \n    Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aenean tincidunt aliquet \n    sem, quis faucibus ex maximus ac. Nullam dignissim, dui et pellentesque fringilla, turpis nisi varius augue, at congue \n    purus mauris at massa. Phasellus consequat consequat erat. Maecenas lorem sem, feugiat nec lacinia id, molestie a augue. \n    Fusce scelerisque, quam eget venenatis posuere, enim purus rutrum libero, in fringilla libero dui vitae diam. Integer a \n    faucibus ligula, vitae finibus lacus. Mauris vitae quam non risus tristique mattis at vel elit. Maecenas volutpat placerat \n    tincidunt. Vivamus sit amet urna id arcu tincidunt viverra id eget neque. Proin facilisis interdum tortor, sagittis \n    maximus massa lobortis ut.</p>\n    <Button \n      className=\"tool-tip-button\"\n      onClick={toggleSalaryLoan}\n    >Start</Button>\n  </div>\n  \n  const businessLoanText = \n  <div className=\"businessText\" style={{ overflow: \"hidden\", padding: \"20px\"}}>\n    <p style={{ fontSize: \"41px\", color: \"#0B67DF\"}}>Business Loan</p>\n    <p style={{ marginTop: \"-30px\", fontSize: \"16px\"}}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dignissim luctus purus, nec varius tortor porttitor a. \n    Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aenean tincidunt aliquet \n    sem, quis faucibus ex maximus ac. Nullam dignissim, dui et pellentesque fringilla, turpis nisi varius augue, at congue \n    purus mauris at massa. Phasellus consequat consequat erat. Maecenas lorem sem, feugiat nec lacinia id, molestie a augue. \n    Fusce scelerisque, quam eget venenatis posuere, enim purus rutrum libero, in fringilla libero dui vitae diam. Integer a \n    faucibus ligula, vitae finibus lacus. Mauris vitae quam non risus tristique mattis at vel elit. Maecenas volutpat placerat \n    tincidunt. Vivamus sit amet urna id arcu tincidunt viverra id eget neque. Proin facilisis interdum tortor, sagittis \n    maximus massa lobortis ut.</p>\n    <Button \n      className=\"tool-tip-button\"\n      onClick={toggleBusinessLoan}\n    >Start</Button>\n  </div>\n  \n  return (\n    <div>\n      {profileError.length > 0 ? <Alert color=\"danger\" className=\"p-4 mb-5\">{profileError}</Alert> : null}\n      {isPersonalLoan ? (<PersonalLoan userDetails={userDetails} />) : isBusinessLoan ? <BusinessLoan userDetails={userDetails} /> : isSalaryLoan ? <SalaryLoan userDetails={userDetails} /> : (\n        <div>\n          <Row>\n          <Col xs=\"6\" xl=\"2\">\n            <Tooltip style={{ width: isMobile ? \"300px !important\" : \"500px !important\", background: \"#fff\" }} placement=\"bottomLeft\" title={personalLoanText}>\n              <Card id=\"loan-card\" onClick={togglePersonalLoan}>\n                <CardBody className=\"text-center\">\n                    <DollarCircleFilled />\n                  <p className=\"mt-3\" style={{ fontSize: \"16px\" }}>Personal Loan</p>\n                </CardBody>\n              </Card>\n            </Tooltip>\n          </Col>\n  \n          <Col xs=\"6\" xl=\"2\">\n            <Tooltip style={{ width: isMobile ? \"300px !important\" : \"500px !important\", background: \"#fff\" }} placement=\"bottom\" title={salaryLoanText}>\n              <Card id=\"salaryloan-card\" onClick={toggleSalaryLoan}>\n                <CardBody className=\"text-center\">\n                    <DollarCircleFilled />\n                  <p className=\"mt-3\" style={{ fontSize: \"16px\" }}>Salary Loan</p>\n                </CardBody>\n              </Card>\n            </Tooltip>\n          </Col>\n  \n          <Col xs=\"6\" xl=\"2\">\n            <Tooltip style={{ width: isMobile ? \"300px !important\" : \"500px !important\", background: \"#fff\" }} placement=\"bottomRight\" title={businessLoanText}>\n              <Card id=\"businessloan-card\" onClick={toggleBusinessLoan}>\n                <CardBody className=\"text-center\">\n                    <DollarCircleFilled />\n                  <p className=\"mt-3\" style={{ fontSize: \"16px\" }}>Businerss Loan</p>\n                </CardBody>\n              </Card>\n            </Tooltip>\n          </Col>\n  \n          <Col xs=\"6\" xl=\"2\" className=\"calculator\">\n            <div>\n              <Card style={{ \n                  background: \"#191817\", \n                  color: \"#FFF\", \n                  borderRadius: \"23px\", \n                  opacity: 1, \n                  height: \"145px\",\n                  paddingTop: \"15px\",\n                  cursor: \"pointer\",\n                  width: isMobile ? \"100%\" : \"90%\"\n                }}\n                onClick={(() => setModal(true))}\n              >\n                <CardBody>\n                  <div className=\"text-center\">\n                    <DollarCircleFilled style={{ fontSize: \"40px\"}} />\n                    <p className=\"mt-3\" style={{ fontSize: \"16px\"}}>Loan Calculator</p>\n                  </div>\n                </CardBody>\n              </Card>\n            </div>\n          </Col>\n        </Row>\n  \n        <Modal isOpen={modal} toggle={toggle}>\n          <ModalHeader toggle={() => setModal(false)}></ModalHeader>\n          <ModalBody>\n            <Card style={{ background: \"transparent\" }}>\n              <CardBody>\n                <p className=\"text-center\">You pay</p>\n                <h2 className=\"text-center\">&#8358; {typeof monthlyRemittance === \"number\" ? monthlyRemittance.toFixed(2) : 0}</h2>\n                <p className=\"text-center\" style={{ lineHeight: \"2px\"}}>For {month} month{month > 1 ? \"s\" : null}</p>\n                <Row>\n                  <Col xs=\"12\" xl=\"12\">\n                    <ConfigProvider getPopupContainer={triggerNode => triggerNode.parentNode}>\n                      \n                      <div className=\"fixed\">\n                        <Slider\n                          min={50000}\n                          max={1000000}\n                          onChange={(value) => setInputValue(value)}\n                          value={typeof inputValue === 'number' ? inputValue : 0 }\n                          tooltipVisible={false}\n                        />\n                      </div>\n                    </ConfigProvider>\n                  </Col>\n                </Row>\n                <Row className=\"mt-4\">\n                  <Col xs=\"12\" xl=\"12\">\n                    <label>How much advance do you require?</label>\n                    <Input value={inputValue} onChange={(e) => setInputValue(e.target.value) } className=\"form-control\" />\n                  </Col>\n                </Row>\n                <Row className=\"mt-4\">\n                  <Col xs=\"12\" xl=\"12\">\n                    <label>How long will you like to pay for?</label>\n                    <Input onChange={(e) => setMonth(e.target.value)} type=\"select\" className=\"form-control\">\n                      <option>-Select loan tenure-</option>\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                      <option value=\"7\">7</option>\n                      <option value=\"8\">8</option>\n                      <option value=\"10\">10</option>\n                      <option value=\"11\">11</option>\n                      <option value=\"12\">12</option>\n                    </Input>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </ModalBody>\n        </Modal>\n      </div>\n      )}\n    </div>\n    \n  );\n}\n\nexport default Loan;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/home/Home.js",["250","251","252","253"],"import { CreditCardFilled, DollarCircleFilled } from \"@ant-design/icons\";\nimport { Tabs, Button } from \"antd\";\nimport { StickyContainer, Sticky } from \"react-sticky\"\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardBody, Col, Row, Table } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchBusinessLoan, fetchPersonalLoan, fetchSalaryLoan, getLoans } from \"../../../store/actions/actions_loan\";\nimport { localStorageAuth } from \"../../../helper/authenticate\";\nimport Paginations from \"../Pagination/Pagination\";\n\nconst { TabPane } = Tabs\n\nconst renderTabBar = (props, DefaultTabBar) => (\n  <Sticky bottomOffset={80}>\n    {({ style }) => (\n      <DefaultTabBar {...props} className=\"site-custom-tab-bar\" style={{ ...style }} />\n    )}\n  </Sticky>\n);\n\nconst Home = () => {\n  const loans = useSelector(state => state.loan);\n  const dispatch = useDispatch();\n  const businessLoan = useSelector(state => state.loan.business);\n  const personalLoan = useSelector(state => state.loan.personal);\n  const salaryLoan = useSelector(state => state.loan.salary);\n  const [ allLoans, setAllLoans ] = useState([]);\n  const [ pendingLoan, setPendingLoan ] = useState({});\n  const [ convertedAmount, setConvertedAmount ] = useState(0);\n  const userId = localStorageAuth().user && localStorageAuth().user._id;\n  const [ amountToPay, setAmountToPay ] = useState(0);\n  const [ isMobile, setIsMobile ] = useState(false);\n  const [ personalPager, setPersonalPager ] = useState({});\n  const [ personalPageOfItems, setPersonalPageOfItems ] = useState([]);\n  const [ businessPager, setBusinessPager ] = useState({});\n  const [ businessPageOfItems, setBusinessPageOfItems ] = useState([]);\n  const [ salaryPager, setSalaryPager ] = useState({});\n  const [ salaryPageOfItems, setSalaryPageOfItems ] = useState([]);\n\n  useEffect(() => {\n    if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){\n      // true for mobile device\n      setIsMobile(true);\n    }else{\n      setIsMobile(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const data1 = { category: \"personal\", page: 1 }\n    const data2 = { category: \"business\", page: 1  };\n    const data3 = { category: \"salary\", page: 1  };\n    dispatch(getLoans());\n    dispatch(fetchPersonalLoan(data1));\n    dispatch(fetchBusinessLoan(data2));\n    dispatch(fetchSalaryLoan(data3));\n  }, [ dispatch ]);\n\n  useEffect(() => {\n    if (loans.success) {\n      setAllLoans(loans.loans && loans.loans.pageOfItems);\n    }\n  }, [ loans ]);\n\n  useEffect(() => {\n    if (allLoans && allLoans.length > 0) {\n      console.log(allLoans, \" these are all the loans\")\n      const filterLoans = allLoans && allLoans.length > 0 && allLoans.filter(l => l.status === \"pending\" && l.userId && l.userId._id === userId);\n      setPendingLoan(filterLoans[0]);\n      \n    }\n  }, [ allLoans ]);\n\n  useEffect(() => {\n    setConvertedAmount(pendingLoan && pendingLoan.amount && pendingLoan.amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n    setAmountToPay(pendingLoan && pendingLoan.amount && pendingLoan.amountToPay.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\n  }, [ pendingLoan ]);\n\n  useEffect(() => {\n    if (loans && loans.personalSuccess) {\n      setPersonalPageOfItems(personalLoan.pageOfItems && personalLoan.pageOfItems);\n      setPersonalPager(personalLoan.pager && personalLoan.pager);\n    }\n  }, [ loans ]);\n\n  useEffect(() => {\n    if (loans && loans.getBusinessSuccess) {\n      setBusinessPageOfItems(businessLoan.pageOfItems && businessLoan.pageOfItems);\n      setBusinessPager(businessLoan.pager && businessLoan.pager);\n    }\n  }, [ loans ]);\n\n  useEffect(() => {\n    if (loans && loans.getSalarySuccess) {\n      setSalaryPageOfItems(salaryLoan.pageOfItems && salaryLoan.pageOfItems);\n      setSalaryPager(salaryLoan.pager && salaryLoan.pager);\n    }\n  }, [ loans ]);\n\n  const handlePagination = (category, page) => {\n    const data = { category, page };\n    if (category === \"personal\") {\n      dispatch(fetchPersonalLoan(data));\n    } else if (category === \"salary\") {\n      dispatch(fetchSalaryLoan(data));\n    } else {\n      dispatch(fetchBusinessLoan(data));\n    }\n  }\n\n  const amount = pendingLoan && pendingLoan.amountToPay && parseInt(pendingLoan.amountToPay);\n  const tenure = pendingLoan && pendingLoan.tenure && parseInt(pendingLoan && pendingLoan.tenure);\n  const monthlyPayment = amount && tenure ? (amount/tenure).toFixed(2) : \"0.00\";\n  // const customerLoan = allLoans && allLoans.filter(l => l.userId && l.userId._id === userId);\n\n  return (\n    <div>\n      <Row>\n        <Col xs=\"12\" xl=\"4\">\n          <Card style={{ \n              background: \"#0B70A5\", \n              color: \"#FFF\", \n              borderRadius: \"23px\", \n              opacity: 1, \n              height: \"145px\",\n              padding: \"20px\"\n            }}\n          >\n            <CardBody>\n              <p style={{ letterSpacing: \"0px\", color: \"#fff\", opacity: 0.7 }}>Your Advance</p>\n              <h3 style={{ color: \"#fff\", lineHeight: \".5em\"}}><strong>&#8358;{convertedAmount ? convertedAmount : \"0.00\"}</strong></h3>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col xs=\"12\" xl=\"4\">\n          <Card style={{ \n              background: \"#E87C231A\",\n              color: \"#FFF\",\n              borderRadius: \"23px\",\n              opacity: 1,\n              height: \"145px\",\n              padding: \"20px\"\n            }}\n          >\n            <CardBody>\n              <p style={{ letterSpacing: \"0px\", color: \"#000\", opacity: 1 }}>Your Payback</p>\n              <h3 style={{ color: \"#E87C23\", lineHeight: \"0.5em\"}}><strong>&#8358;{amountToPay ? amountToPay : \"0.00\"}</strong></h3>\n              <Row>\n                <Col xs=\"6\" xl=\"6\"></Col>\n                <Col xs=\"6\" xl=\"6\">\n                  <p style={{ color: \"black\", marginTop: \"-15px\"}}>Monthly Payment</p>\n                  <p style={{ lineHeight: \"0.0001px\", marginTop: \"-10px\", color: \"#E87C23\" }}>&#8358;{monthlyPayment}</p>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col xs=\"12\" xl=\"2\" className=\"get-loan\">\n          <Button style={{\n            display: isMobile ? \"block\" : \"none\",\n            background: \"#E87C23\", \n            color: \"#FFF\", \n            borderRadius: \"7px\", \n            opacity: 1, \n            height: \"60px\",\n            width: \"100%\",\n            marginTop: \"30px\"\n          }} onClick={() => window.location.href=\"/account/loan\"}>\n            <DollarCircleFilled style={{ fontSize: \"20px\"}}/> <span style={{ fontSize: \"16px\" }}>Get a Loan</span>\n          </Button>\n          <div className=\"get-loan-container\">\n            <Card style={{ \n                background: \"#191817\",\n                color: \"#FFF\", \n                borderRadius: \"23px\", \n                opacity: 1, \n                height: \"145px\",\n                paddingTop: \"20px\",\n                cursor: \"pointer\",\n                width: \"90%\",\n                display: isMobile ? \"none\" : \"block\",\n                marginLeft: isMobile ? 0 : \"150px\",\n              }}\n              onClick={() => window.location.href=\"/account/loan\"}\n            >\n              <CardBody className=\"text-center\">\n                <DollarCircleFilled style={{ fontSize: \"40px\"}} />\n                <p style={{ fontSize: \"16px\", marginTop: \"15px\"}}>Get a Loan</p>\n              </CardBody>\n            </Card>\n          </div>\n        </Col>\n      </Row>\n      <Row className=\"mt-5 mb-4\">\n        <Col xl=\"12\" xs=\"12\">\n          <h3>Payment Registry</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <StickyContainer>\n            <Tabs defaultActiveKey=\"1\" renderTabBar={renderTabBar}>\n              <TabPane tab={\n                <span>\n                  Personal\n                </span>\n              } \n              key=\"1\">\n                <Table responsive hover>\n                  <thead>\n                    <th>UniqueID</th>\n                    <th>Amount</th>\n                    <th>Guarantor</th>\n                    <th>Tenure</th>\n                    <th>Purpose</th>\n                    <th>Category</th>\n                    <th>Status</th>\n                  </thead>\n                  <tbody>\n                    {personalPageOfItems && personalPageOfItems.length > 0 ? personalPageOfItems.map(loan => (\n                      <tr key={loan._id}>\n                        <td>\n                          <CreditCardFilled /> <strong>{loan.uniqueID}</strong>\n                        </td>\n                        <td style={{ color: \"#0000006E\",}}>&#8358;{loan.amount}</td>\n                        <td style={{ color: \"#0000006E\",}}><span style={{ color: \"#ff0000\"}}>{loan.guarrantor && loan.guarrantor.fullname}</span></td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.tenure}</td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.purpose}</td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.category}</td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.status}</td>\n                      </tr>\n                    )) : <p className=\"text-center\">No records yet</p>}\n                  </tbody>\n                </Table>\n                {personalPager.pages && personalPager.pages.length > 1 ? (\n                  <Row className=\"justify-content-center\">\n                    <div>\n                      <Paginations handlePagination={handlePagination} category=\"personal\" pager={personalPager} />\n                    </div>\n                  </Row>\n                ) : null}\n              </TabPane>\n              <TabPane  tab={\n                <span>\n                  Salary\n                </span>\n              } key=\"2\">\n                <Table responsive hovered>\n                  <thead>\n                    <th>UniqueID</th>\n                    <th>Amount</th>\n                    <th>HR Name</th>\n                    <th>HR Email</th>\n                    <th>Tenure</th>\n                    <th>Purpose</th>\n                    <th>Category</th>\n                    <th>Status</th>\n                  </thead>\n                  <tbody>\n                    {salaryPageOfItems && salaryPageOfItems.length > 0 ? salaryPageOfItems.map(loan => (\n                      <tr key={loan._id}>\n                        <td>\n                          <CreditCardFilled /> <strong>{loan.uniqueID}</strong>\n                        </td>\n                        <td style={{ color: \"#0000006E\",}}>&#8358;{loan.amount}</td>\n                        <td style={{ color: \"#0000006E\",}}><span style={{ color: \"#ff0000\"}}>{loan.hr && loan.hr.fullname}</span></td>\n                        <td style={{ color: \"#0000006E\",}}><span style={{ color: \"#ff0000\"}}>{loan.hr && loan.hr.email}</span></td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.tenure}</td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.purpose}</td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.category}</td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.status}</td>\n                      </tr>\n                    )) : <p className=\"text-center\">No records found</p>}\n                  </tbody>\n                </Table>\n                {salaryPager && salaryPager.pages && salaryPager.pages.length > 1 ? (\n                  <Row className=\"justify-content-center\">\n                    <div>\n                      <Paginations handlePagination={handlePagination} category=\"salary\" pager={salaryPager} />\n                    </div>\n                  </Row>\n                ) : null}\n              </TabPane>\n\n              <TabPane  tab={\n                <span>\n                  Business\n                </span>\n              } key=\"3\">\n                <Table responsive hovered>\n                  <thead>\n                    <th>UniqueID</th>\n                    <th>Amount</th>\n                    <th>Guarantor</th>\n                    <th>Tenure</th>\n                    <th>Purpose</th>\n                    <th>Category</th>\n                    <th>Status</th>\n                  </thead>\n                  <tbody>\n                  {businessPageOfItems && businessPageOfItems.length > 0 ? businessPageOfItems.map(loan => (\n                    <tr key={loan._id}>\n                      <td>\n                        <CreditCardFilled /> <strong>{loan.uniqueID}</strong>\n                      </td>\n                      <td style={{ color: \"#0000006E\",}}>&#8358;{loan.amount}</td>\n                      <td style={{ color: \"#0000006E\",}}><span style={{ color: \"#ff0000\"}}>{loan.guarrantor && loan.guarrantor.fullname}</span></td>\n                      <td style={{ color: \"#0000006E\",}}>{loan.tenure}</td>\n                      <td style={{ color: \"#0000006E\",}}>{loan.purpose}</td>\n                      <td style={{ color: \"#0000006E\",}}>{loan.category}</td>\n                      <td style={{ color: \"#0000006E\",}}>{loan.status}</td>\n                    </tr>\n                  )) : <p className=\"text-center\">No records found</p>}\n                  </tbody>\n                </Table>\n                {businessPager.pages && businessPager.pages.length > 1 ? (\n                  <Row className=\"justify-content-center\">\n                    <div>\n                      <Paginations handlePagination={handlePagination} category=\"business\" pager={businessPager} />\n                    </div>\n                  </Row>\n                ) : null}\n              </TabPane>\n            </Tabs>\n          </StickyContainer>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Home;","/home/onoja/Documents/applications/gare-finance/gare-client/src/store/reducers/loan.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/transaction/Transaction.js",["254","255","256","257","258","259","260","261","262"],"import { CreditCardFilled, DollarCircleFilled } from \"@ant-design/icons\";\nimport { Tabs } from \"antd\";\nimport { StickyContainer, Sticky } from \"react-sticky\"\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardBody, Col, Row, Table } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchBusinessLoan, fetchPersonalLoan, fetchSalaryLoan, getLoans } from \"../../../store/actions/actions_loan\";\nimport { localStorageAuth } from \"../../../helper/authenticate\";\nimport Paginations from \"../Pagination/Pagination\";\n\nconst { TabPane } = Tabs\n\nconst renderTabBar = (props, DefaultTabBar) => (\n  <Sticky bottomOffset={80}>\n    {({ style }) => (\n      <DefaultTabBar {...props} className=\"site-custom-tab-bar\" style={{ ...style }} />\n    )}\n  </Sticky>\n);\n\nconst Transaction = () => {\n  const loans = useSelector(state => state.loan);\n  const dispatch = useDispatch();\n  const businessLoan = useSelector(state => state.loan.business);\n  const personalLoan = useSelector(state => state.loan.personal);\n  const salaryLoan = useSelector(state => state.loan.salary);\n  const [ allLoans, setAllLoans ] = useState([]);\n  const [ pendingLoan, setPendingLoan ] = useState({});\n  const [ convertedAmount, setConvertedAmount ] = useState(0);\n  const userId = localStorageAuth().user && localStorageAuth().user._id;\n  const [ amountToPay, setAmountToPay ] = useState(0);\n  const [ personalPager, setPersonalPager ] = useState({});\n  const [ personalPageOfItems, setPersonalPageOfItems ] = useState([]);\n  const [ businessPager, setBusinessPager ] = useState({});\n  const [ businessPageOfItems, setBusinessPageOfItems ] = useState([]);\n  const [ salaryPager, setSalaryPager ] = useState({});\n  const [ salaryPageOfItems, setSalaryPageOfItems ] = useState([]);\n\n  useEffect(() => {\n    const data1 = { category: \"personal\", page: 1 }\n    const data2 = { category: \"business\", page: 1  };\n    const data3 = { category: \"salary\", page: 1  };\n    dispatch(getLoans());\n    dispatch(fetchPersonalLoan(data1));\n    dispatch(fetchBusinessLoan(data2));\n    dispatch(fetchSalaryLoan(data3));\n  }, [ dispatch ]);\n\n  useEffect(() => {\n    if (loans.success) {\n      setAllLoans(loans.loans && loans.loans.pageOfItems);\n    }\n  }, [ loans ]);\n\n  useEffect(() => {\n    if (allLoans && allLoans.length > 0) {\n      const filterLoans = allLoans && allLoans.length > 0 && allLoans.filter(l => l.status === \"pending\" && l.userId && l.userId._id === userId);\n      setPendingLoan(filterLoans[0]);\n      \n    }\n  }, [ allLoans ]);\n\n  useEffect(() => {\n    setConvertedAmount(pendingLoan && pendingLoan.amount && pendingLoan.amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n    setAmountToPay(pendingLoan && pendingLoan.amount && pendingLoan.amountToPay.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\n  }, [ pendingLoan ]);\n\n  useEffect(() => {\n    if (loans && loans.personalSuccess) {\n      setPersonalPageOfItems(personalLoan.pageOfItems && personalLoan.pageOfItems);\n      setPersonalPager(personalLoan.pager && personalLoan.pager);\n    }\n  }, [ loans ]);\n\n  useEffect(() => {\n    if (loans && loans.getBusinessSuccess) {\n      setBusinessPageOfItems(businessLoan.pageOfItems && businessLoan.pageOfItems);\n      setBusinessPager(businessLoan.pager && businessLoan.pager);\n    }\n  }, [ loans ]);\n\n  useEffect(() => {\n    if (loans && loans.getSalarySuccess) {\n      setSalaryPageOfItems(salaryLoan.pageOfItems && salaryLoan.pageOfItems);\n      setSalaryPager(salaryLoan.pager && salaryLoan.pager);\n    }\n  }, [ loans ]);\n\n  const handlePagination = (category, page) => {\n    const data = { category, page };\n    if (category === \"personal\") {\n      dispatch(fetchPersonalLoan(data));\n    } else if (category === \"salary\") {\n      dispatch(fetchSalaryLoan(data));\n    } else {\n      dispatch(fetchBusinessLoan(data));\n    }\n  }\n\n  console.log(salaryLoan, \" the salary loan\")\n  return (\n    <div>\n     \n      <Row className=\"mt-2 mb-4\">\n        <Col xl=\"12\" xs=\"12\">\n          <h3>Transactions</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n        <StickyContainer>\n            <Tabs defaultActiveKey=\"1\" renderTabBar={renderTabBar}>\n              <TabPane tab={\n                <span>\n                  Personal\n                </span>\n              } \n              key=\"1\">\n                <Table responsive hover>\n                  <thead>\n                    <th>UniqueID</th>\n                    <th>Amount</th>\n                    <th>Guarantor</th>\n                    <th>Tenure</th>\n                    <th>Purpose</th>\n                    <th>Category</th>\n                    <th>Status</th>\n                  </thead>\n                  <tbody>\n                    {personalPageOfItems && personalPageOfItems.length > 0 ? personalPageOfItems.map(loan => (\n                      <tr key={loan._id}>\n                        <td>\n                          <CreditCardFilled /> <strong>{loan.uniqueID}</strong>\n                        </td>\n                        <td style={{ color: \"#0000006E\",}}>&#8358;{loan.amount}</td>\n                        <td style={{ color: \"#0000006E\",}}><span style={{ color: \"#ff0000\"}}>{loan.guarrantor && loan.guarrantor.fullname}</span></td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.tenure}</td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.purpose}</td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.category}</td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.status}</td>\n                      </tr>\n                    )) : <p className=\"text-center\">No records yet</p>}\n                  </tbody>\n                </Table>\n                {personalPager.pages && personalPager.pages.length > 1 ? (\n                  <Row className=\"justify-content-center\">\n                    <div>\n                      <Paginations handlePagination={handlePagination} category=\"personal\" pager={personalPager} />\n                    </div>\n                  </Row>\n                ) : null}\n              </TabPane>\n              <TabPane  tab={\n                <span>\n                  Salary\n                </span>\n              } key=\"2\">\n                <Table responsive hovered>\n                  <thead>\n                    <th>UniqueID</th>\n                    <th>Amount</th>\n                    <th>HR Name</th>\n                    <th>HR Email</th>\n                    <th>Tenure</th>\n                    <th>Purpose</th>\n                    <th>Category</th>\n                    <th>Status</th>\n                  </thead>\n                  <tbody>\n                    {salaryPageOfItems && salaryPageOfItems.length > 0 ? salaryPageOfItems.map(loan => (\n                      <tr>\n                        <td>\n                          <CreditCardFilled /> <strong>{loan.uniqueID}</strong>\n                        </td>\n                        <td style={{ color: \"#0000006E\",}}>&#8358;{loan.amount}</td>\n                        <td style={{ color: \"#0000006E\",}}><span style={{ color: \"#ff0000\"}}>{loan.hr && loan.hr.fullname}</span></td>\n                        <td style={{ color: \"#0000006E\",}}><span style={{ color: \"#ff0000\"}}>{loan.hr && loan.hr.email}</span></td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.tenure}</td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.purpose}</td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.category}</td>\n                        <td style={{ color: \"#0000006E\",}}>{loan.status}</td>\n                      </tr>\n                    )) : <p className=\"text-center\">No records found</p>}\n                  </tbody>\n                </Table>\n                {salaryPager && salaryPager.pages && salaryPager.pages.length > 1 ? (\n                  <Row className=\"justify-content-center\">\n                    <div>\n                      <Paginations handlePagination={handlePagination} category=\"salary\" pager={salaryPager} />\n                    </div>\n                  </Row>\n                ) : null}\n              </TabPane>\n\n              <TabPane  tab={\n                <span>\n                  Business\n                </span>\n              } key=\"3\">\n                <Table responsive hovered>\n                  <thead>\n                    <th>UniqueID</th>\n                    <th>Amount</th>\n                    <th>Guarantor</th>\n                    <th>Tenure</th>\n                    <th>Purpose</th>\n                    <th>Category</th>\n                    <th>Status</th>\n                  </thead>\n                  <tbody>\n                  {businessPageOfItems && businessPageOfItems.length > 0 ? businessPageOfItems.map(loan => (\n                    <tr>\n                      <td>\n                        <CreditCardFilled /> <strong>{loan.uniqueID}</strong>\n                      </td>\n                      <td style={{ color: \"#0000006E\",}}>&#8358;{loan.amount}</td>\n                      <td style={{ color: \"#0000006E\",}}><span style={{ color: \"#ff0000\"}}>{loan.guarrantor && loan.guarrantor.fullname}</span></td>\n                      <td style={{ color: \"#0000006E\",}}>{loan.tenure}</td>\n                      <td style={{ color: \"#0000006E\",}}>{loan.purpose}</td>\n                      <td style={{ color: \"#0000006E\",}}>{loan.category}</td>\n                      <td style={{ color: \"#0000006E\",}}>{loan.status}</td>\n                    </tr>\n                  )) : <p className=\"text-center\">No records found</p>}\n                  </tbody>\n                </Table>\n                {businessPager.pages && businessPager.pages.length > 1 ? (\n                  <Row className=\"justify-content-center\">\n                  <div>\n                    <Paginations handlePagination={handlePagination} category=\"business\" pager={businessPager} />\n                  </div>\n                </Row>\n                ) : null}\n              </TabPane>\n            </Tabs>\n          </StickyContainer>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Transaction;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/EmailVerified.js",["263"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col, Modal, Button, ModalBody } from \"reactstrap\";\nimport { verifyEmail } from \"../../store/actions/actions_onboarding\";\nimport { localStorageAuth } from \"../../helper/authenticate\";\nimport PasswordReset from \"../../assets/verified_email.svg\";\n\nconst EmailVerified = () => {\n  const account = useSelector(state => state.account);\n  const dispatch = useDispatch();\n  const [ modal, setModal ] = useState(false);\n  const tok = window.location.pathname.slice(14);\n\n  useEffect(() => {\n    const data = { email_verification_token: tok }\n    dispatch(verifyEmail(data))\n  }, [ dispatch, tok ]);\n\n  useEffect(() => {\n    if (account.verifyEmailSuccess) {\n      setModal(true);\n    }\n  }, [ account ]);\n\n  useEffect(() => {\n    if (modal === true && localStorageAuth().token) {\n      setTimeout(() => {\n        window.location.href = \"/account\";\n      }, 2000)\n    }\n  }, [ modal ]);\n\n  const toggle = () => {\n    setModal(false);\n  }\n\n  return (\n    <div>\n      <div className=\"signup-container\">\n        <Row className=\"justify-content-center\">\n          <Col xl=\"3\">\n            <Modal isOpen={modal} toggle={toggle}>\n              <ModalBody>\n                <div className=\"text-center\">\n                  <img className=\"mt-5\" src={PasswordReset} alt=\"email sent\" />\n                  <h4 className=\"\" style={{ marginTop: \"70px\"}}><strong>You're set to go</strong></h4>\n                  <p>Email verified successfully</p>\n                  <Row className=\"mt-5\">\n                    {/* <Col xs=\"12\" xl=\"12\">\n                      <Button onClick={() => window.location.href = \"/login\"} className=\"reg-button\">Login</Button>\n                    </Col> */}\n                  </Row>\n                  <Row className=\"mt-4\">\n                    <Col xs=\"12\" xl=\"12\">\n                      <p style={{ float: \"right\"}}><span className=\"privacy\">Privacy | Terms</span></p>\n                    </Col>\n                  </Row>\n                </div>\n              </ModalBody>\n            </Modal>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default EmailVerified;","/home/onoja/Documents/applications/gare-finance/gare-client/src/helper/LocalStorageAuth.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/hamburger-menu/MenuItem.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/profile/employment/Employment.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/business/LoanComponent.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/personal/LoanComponent.js",["264"],"import React from \"react\";\nimport { Col, Row, Input } from \"reactstrap\";\n// import { Button } from \"antd\";\nimport { InfoOutlined } from \"@ant-design/icons\";\n\nimport \"./Personal.css\";\n\nconst LoanComponent = ({\n  amount,\n  purpose,\n  handleAmount,\n  handlePurpose,\n  handleRelManage,\n  handleTenure,\n  errorMsg,\n}) => {\n  return (\n    <div>\n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <Row className=\"mt-4\">\n            <Col>\n              <label htmlFor=\"p-amount\">How much advance do you need [NGN]</label>\n              <Input value={amount} id=\"p-amount\" onChange={(e) => handleAmount(e)} className=\"form-control\" />\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"amount\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n          </Row>\n          <Row className=\"mt-4\">\n            <Col>\n              <label htmlFor=\"p-tenure\">Loan Tenure</label>\n              <Input onChange={(e) => handleTenure(e)} type=\"select\" id=\"p-tenure\" className=\"form-control\">\n                <option>Select Loan Tenure</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n              </Input>\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"tenure\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n          </Row>\n          <Row className=\"mt-4\">\n            <Col>\n              <label htmlFor=\"p-purpose\">Purpose</label>\n              <Input value={purpose} onChange={(e) => handlePurpose(e)} id=\"p-purpose\" type=\"text\" className=\"form-control\" />\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"purpose\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n          </Row>\n          <Row className=\"mt-4\">\n            <Col>\n              <label htmlFor=\"p-relm\">Relationship Manager</label>\n              <Input onChange={(e) => handleRelManage(e)} id=\"p-relm\" type=\"select\" id=\"rel\" className=\"form-control\">\n                <option>Choose a Relationship Manager</option>\n                <option value=\"Joy Onosetele\">Joy Onosetele-Victoria Island, Lagos</option>\n                <option value=\"esther\">Esther</option>\n                <option value=\"samuel\">Samuel</option>\n                <option value=\"isaiah\">Isaiah</option>\n              </Input>\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"relManager\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n          </Row>\n        </Col>\n        <Col xs=\"12\" xl=\"6\" className=\"pt-5\">\n          <Row>\n            <Col xs=\"1\" xl=\"1\">\n              <span id=\"info-outlined\"><InfoOutlined /></span>\n            </Col>\n            <Col xs=\"11\" xl=\"11\">\n              <p>\n                The loan provides access to quick money to meet urgent financial needs and reduces reduces financial burden and pressure\n              </p>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default LoanComponent;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/App.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/login/Login.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/hamburger-menu/MenuContainer.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/personal/AccountInformation.js",["265"],"import React from \"react\";\nimport { Col, Row, Input, Card, CardBody } from \"reactstrap\";\nimport { Button } from \"antd\";\nimport { Icon } from 'semantic-ui-react'\nimport \"./Personal.css\";\n\nconst AccountInformation = ({ userDetails, attestation, isAttested, errorMsg, handleAttestation }) => {\n\n  const firstName = userDetails.bank && userDetails.bank.owner && userDetails.bank.owner.firstName;\n  const lastName = userDetails.bank && userDetails.bank.owner && userDetails.bank.owner.lastName;\n  const accountNumber = userDetails.bank && userDetails.bank.accountNumber;\n  const accountType = userDetails.bank && userDetails.bank.accountType;\n  const name = userDetails.bank && userDetails.bank.name;\n\n  return (\n    <div>\n      <Row className=\"mt-3\">\n        <Col xs=\"12\" xl=\"5\">\n          <Card id=\"account-card\">\n            <CardBody>\n              <Row className=\"mt-2\">\n                <Col xs=\"12\" xl=\"12\" className=\"pl-4\">\n                  <p className=\"account-type\">\n                    {accountType ? accountType : \"No data\"}\n                  </p>\n                  <p className=\"bank-name\">{name ? name : \"No data\"}</p>\n                  <p className=\"account-number\">{accountNumber ? accountNumber : \"No data\"}</p>\n                </Col>\n              </Row>\n              \n              <Row className=\"mt-3\">\n                <Col xs=\"12\" xl=\"12\" className=\"pl-4\">\n                  <p className=\"account-type\">Account Name</p>\n                  <p className=\"account-number\">\n                    {firstName ? firstName : \"No data\"} {\" \"} {lastName ? lastName : \"No data\"}\n                  </p>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col xs=\"12\" xl=\"6\" className=\"pt-5\">\n          {userDetails && userDetails.pendingLoan ? null : <Button onClick={() => window.location.href=\"/account/profile\"} className=\"change-button\">Change</Button>}\n        </Col>\n      </Row>\n      {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"accountNumber\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n      {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"accountType\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n      {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"bankName\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n\n      <Row className=\"mt-3\">\n        <Col xs=\"12\" xl=\"5\">\n          {/* <p className=\"partial-description\">\n            The quick, brown fox jumps over a lazy dog. DJs flock by when MTV ax quiz prog. \n            Junk MTV quiz graced by fox whelps. Bawds jog, flick quartz, vex nymphs. Waltz, \n            bad nymph, for quick jigs vex! Fox nymphs grab quick-jived waltz. Brick quiz whangs \n            jumpy veldt fox. Bright vixens jump; dozy fowl quack. Quick wafting zephyrs vex \n            bold Jim. Quick zephyrs blow, vexing daft Jim. Sex-charged fop blew my junk TV quiz. \n            How quickly daft jumping zebras vex. Two driven jocks help fax my big quiz. Quick, \n            Baz, get my woven flax jodhpurs! \"Now fax quiz Jack!\" my brave ghost pled. Five \n            quacking zephyrs jolt my wax bed. Flummoxed by job.\n          </p> */}\n        </Col>\n      </Row>\n      <p className=\"mt-2\">Attestation</p>\n      <Row>\n        <Col xs=\"1\" xl=\"1\">\n          <input onChange={handleAttestation} ref={attestation} type=\"checkbox\" style={{ marginTop: \"-20px\"}} />\n        </Col>\n        <Col xs=\"11\" xl=\"5\">\n          <p className=\"attestation\">\n            I certify that all the information provided by me above is true, correct and complete. \n            I authorize Gare Advance Financial Limited to make any enquiry it considers necessary \n            and appropriate for the purpose of evaluating this application.\n          </p>\n          {isAttested ? null : <p style={{ marginLeft: \"-45px\", color: \"#ff0000\" }}><Icon color=\"red\" size={\"big\"} name=\"exclamation triangle\" />You must accept the attestation to be able to continue</p>}\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default AccountInformation;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/salary/LoanComponent.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/index.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/registration/Register.js",["266","267","268"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Input, Spinner } from \"reactstrap\";\nimport { Button } from \"antd\";\nimport Logo from \"../../../assets/logo1.svg\";\nimport EmailSent from \"../../../assets/email_sent.svg\";\nimport Brandname from \"../../../assets/brandname.svg\";\nimport { signup } from \"../../../store/actions/actions_onboarding\";\nimport \"./Register.css\";\n\nconst Register = () => {\n  const account = useSelector(state => state.account);\n  const dispatch = useDispatch();\n  const [ message, setMessage ] = useState(\"\");\n  const [ toggle, toggleScreen ] = useState(false);\n  const [ errorMsg, setErrorMsg ] = useState([]);\n  const [ error, setError ] = useState(\"\");\n  const [ firstName, setFirstName ] = useState(\"\");\n  const [ lastName, setLastName ] = useState(\"\");\n  const [ phone, setPhone ] = useState(\"\");\n  const [ email, setEmail ] = useState(\"\");\n  const [ password, setPassword ] = useState(\"\");\n  const [ how_you_hear_about_us, setHowYouHeard ] = useState(\"\");\n\n  const handleSubmit = () => {\n    const data = {\n      firstName,\n      lastName,\n      phoneNumber: phone,\n      email,\n      password,\n      how_you_hear_about_us\n    }\n\n    dispatch(signup(data));\n  }\n\n  useEffect(() => {\n    if (account && account.error) {\n      setErrorMsg(account.error);\n      if (!Array.isArray(account.error))  setError(account.error);\n    } \n  }, [ account ]);\n\n  useEffect(() => {\n    \n    if (account.signupSuccess === true) {\n      toggleScreen(true);\n    }\n  }, [ account ]);\n\n  const handleFirstName = (e) => {\n    setErrorMsg(\"\");\n    setFirstName(e.target.value);\n  }\n\n  const handleLastName = (e) => {\n    setErrorMsg(\"\");\n    setLastName(e.target.value);\n  }\n\n  const handleEmail = (e) => {\n    setErrorMsg(\"\");\n    setEmail(e.target.value);\n  }\n\n  const handlePassword = (e) => {\n    setErrorMsg(\"\");\n    setPassword(e.target.value);\n  }\n\n  const handlePhone = (e) => {\n    setErrorMsg(\"\");\n    setPhone(e.target.value);\n  }\n\n  return (\n    <div className=\"signup-container\">\n      <Row className=\"justify-content-center\">\n        <Col xs=\"12\" xl=\"3\">\n          <div className=\"account-container\">\n            {toggle === true ? (\n              <>\n                <img className=\"mt-5\" className=\"email-image\" src={EmailSent} alt=\"email sent\" />\n                <h4 className=\"text-center\"><strong>Email Verification sent</strong></h4>\n                <p className=\"text-center\">Check your email to verify and continue</p>\n                <Row className=\"mt-5\">\n                  <Col xs=\"12\" xl=\"12\">\n                    <Button onClick={() => toggleScreen(false)} className=\"reg-button\">Resend email</Button>\n                  </Col>\n                </Row>\n                <Row className=\"mt-4\">\n                  <Col xs=\"12\" xl=\"12\">\n                    <p style={{ float: \"right\"}}><span className=\"privacy\">Privacy | Terms</span></p>\n                  </Col>\n                </Row>\n              </>\n            ) : (\n              <div className=\"form-wrapper\">\n                <Row>\n                  <Col xs=\"9\" xl=\"9\">\n                    <img src={Logo} alt=\"logo\"/> <img src={Brandname} alt=\"brand\" />\n                  </Col>\n                  <Col xs=\"3\" xl=\"3\">\n                    <Link to=\"/login\"className=\"r-text float\">Sign in</Link>\n                  </Col>\n                </Row>\n                \n                <Row className=\"justify-content-center mt-1\">\n                  <Col xs=\"7\" xl=\"7\">\n                    <h4 className=\"text-center hey-text\"><strong>Hey there, Sign up</strong></h4>\n                    <p className=\"text-center hey-p-text\">Get funds with our platform</p>\n                  </Col>\n                </Row>\n                <Row className=\"mt-3\">\n                  <Col xs=\"12\" xl=\"6\">\n                    <label htmlFor=\"fname\">First Name</label>\n                    <Input onChange={(e) => handleFirstName(e)} type=\"text\" id=\"fname\" placeholder=\"First name\" className=\"form-controller\" />\n                    {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"firstName\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"9px\"}}>{error.msg}</span> <br /></>) : null): null}\n                  </Col>\n                  <Col xs=\"12\" xl=\"6\" className=\"second-input\">\n                    <label htmlFor=\"lname\">Last Name</label>\n                    <Input onChange={(e) => handleLastName(e)} type=\"text\" id=\"lname\" placeholder=\"Last name\" className=\"form-controller\" />\n                    {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"lastName\" ? <><span key={i} style={{ color: \"#ff0000\", fontSize: \"9px\"}}>{error.msg}</span> <br /></> : null): null}\n                  </Col>\n                </Row>\n                <Row className=\"mt-4\">\n                  <Col xs=\"12\" xl=\"6\">\n                    <label htmlFor=\"email\">Email Address</label>\n                    <Input onChange={(e) => handleEmail(e)} type=\"email\" id=\"email\" placeholder=\"example@mail.com\" className=\"form-controller\" />\n                    {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"email\" ? <span key={i} style={{ color: \"#ff0000\", fontSize: \"9px\"}}>{error.msg}</span> : null): null}\n                  </Col>\n                  <Col xs=\"12\" xl=\"6\" className=\"second-input\">\n                    <label htmlFor=\"phone\">Phone Number</label>\n                    <Input onChange={(e) => handlePhone(e)} id=\"phone\" placeholder=\"+234 7037786423\" className=\"form-controller\" />\n                    {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"phoneNumber\" ? <span key={i} style={{ color: \"#ff0000\", fontSize: \"9px\"}}>{error.msg}</span> : null): null}\n                  </Col>\n                </Row>\n                <Row className=\"mt-4\">\n                  <Col xs=\"12\" xl=\"12\">\n                    <label htmlFor=\"password\">Password</label>\n                    <Input onChange={(e) => handlePassword(e)} type=\"password\" id=\"password\" placeholder=\"Password\" className=\"form-controller\" />\n                    {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"password\" ? <span key={i} style={{ color: \"#ff0000\", fontSize: \"9px\"}}>{error.msg}</span> : null): null}\n                  </Col>\n                </Row>\n                <Row className=\"mt-4\">\n                  <Col xs=\"12\" xl=\"12\">\n                    <label htmlFor=\"how\">How you heard about us <span>(Optional)</span></label>\n                    <Input id=\"how\" onChange={(e) => setHowYouHeard(e.target.value)} type=\"select\" placeholder=\"Password\" className=\"form-controller\">\n                      <option>How you here about us</option>\n                      <option value>A friend</option>\n                      <option value>On social media</option>\n                      <option value>Through webinar</option>\n                    </Input>\n                    \n                  </Col>\n                </Row>\n                {error.length ? (\n                  <Row className=\"justify-content-center mt-1\">\n                    <Col xs=\"7\" xl=\"12\">\n                      <p className=\"text-center\" style={{ color: \"#ff0000\"}}>{error}</p>\n                    </Col>\n                  </Row>\n                ) : null}\n                <Row className=\"mt-4\">\n                  <Col xs=\"12\" xl=\"12\">\n                    <p>By signing up, you agree to our <span className=\"terms\">Terms of use</span> & <span className=\"terms\">Privacy Policy</span></p>\n                  </Col>\n                </Row>\n                \n                <Row className=\"mt-2\">\n                  <Col xs=\"12\" xl=\"12\">\n                    {account.signupLoading ? (\n                      <div className=\"text-center\">\n                        <Spinner color=\"primary\" />\n                      </div>\n                    ) : (\n                      <Button onClick={handleSubmit} className=\"reg-button\">Sign up</Button>\n                    )}\n                  </Col>\n                </Row>\n              </div>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Register;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/hamburger-menu/Menu.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/business/AccountInformation.js",["269"],"import React from \"react\";\nimport { Col, Row, Input, Card, CardBody } from \"reactstrap\";\nimport { Button } from \"antd\";\nimport { CheckOutlined } from \"@ant-design/icons\";\nimport \"./Business.css\";\n\nconst AccountInformation = ({ userDetails, errorMsg, }) => {\n\n  const firstName = userDetails.bank && userDetails.bank.owner && userDetails.bank.owner.firstName;\n  const lastName = userDetails.bank && userDetails.bank.owner && userDetails.bank.owner.lastName;\n  const accountNumber = userDetails.bank && userDetails.bank.accountNumber;\n  const accountType = userDetails.bank && userDetails.bank.accountType;\n  const name = userDetails.bank && userDetails.bank.name;\n\n  return (\n    <div>\n      <Row className=\"mt-3\">\n        <Col xs=\"12\" xl=\"5\">\n          <Card id=\"account-card\">\n            <CardBody>\n              <Row className=\"mt-2\">\n                <Col xs=\"12\" xl=\"12\" className=\"pl-4\">\n                  <p className=\"account-type\">\n                    {accountType ? accountType : \"No data\"}\n                  </p>\n                  <p className=\"bank-name\">{name ? name : \"No data\"}</p>\n                  <p className=\"account-number\">{accountNumber ? accountNumber : \"No data\"}</p>\n                </Col>\n              </Row>\n             \n              <Row className=\"mt-3\">\n                <Col xs=\"12\" xl=\"12\" className=\"pl-4\">\n                  <p className=\"account-type\">Account Name</p>\n                  <p className=\"account-number\">\n                    {firstName ? firstName : \"No data\"} {\" \"} {lastName ? lastName : \"No data\"}\n                  </p>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col xs=\"12\" xl=\"6\" className=\"pt-5\">\n          {userDetails && userDetails.pendingLoan ? null : <Button onClick={() => window.location.href=\"/account/profile\"} className=\"change-button\">Change</Button>}\n        </Col>\n      </Row>\n      \n      <Row className=\"justify-content-center\">\n        <Col xs=\"11\" xl=\"11\">\n          {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"accountNumber\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n          {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"accountType\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n          {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"bankName\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n        </Col>\n      </Row>\n      \n      <Row className=\"mt-3\">\n        <Col xs=\"12\" xl=\"5\">\n          \n        </Col>\n      </Row>\n      <p className=\"mt-2\">Attestation</p>\n      <Row>\n        <Col xs=\"1\" xl=\"1\">\n          <span id=\"info-outlined\">< CheckOutlined /></span>\n        </Col>\n        <Col xs=\"11\" xl=\"5\">\n          <p className=\"attestation\">\n            I certify that all the information provided by me above is true, correct and complete. \n            I authorize Gare Advance Financial Limited to make any enquiry it considers necessary \n            and appropriate for the purpose of evaluating this application.\n          </p>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default AccountInformation;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/contents/TabSideBar.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/contents/Content.js",["270"],"import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Row, Col } from \"reactstrap\";\nimport { Layout } from 'antd';\nimport Headers from \"../header/Headers\";\nimport SideBar from \"../sidebar/Side\";\nimport \"./Content.css\";\nimport TabSideBar from \"./TabSideBar\";\nimport Home from \"../home/Home\";\nimport Loan from \"../loan/Loan\";\nimport Savings from \"../savings/Savings\";\nimport Transaction from \"../transaction/Transaction\";\nimport Profile from \"../profile/Profile\";\nimport { localStorageAuth } from \"../../../helper/authenticate\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser } from \"../../../store/actions/account\";\nimport MenuContainer from \"../hamburger-menu/MenuContainer\";\n\nconst Account = (props) => {\n  const account = useSelector(state => state.accountReducer);\n  const dispatch = useDispatch();\n  const [ user, setUser ] = useState({});\n  const [ isMenuOpen, setMenuOpen ] = useState(false);\n  const time = new Date().getHours();\n\n  useEffect(() => {\n    const userId = localStorageAuth().user && localStorageAuth().user._id;\n    const data = { userId }\n    dispatch(getUser(data));\n  }, [ dispatch ]);\n\n  useEffect(() => {\n    if (account.userSuccess) {\n      setUser(account.account);\n    }\n  }, [ account ]);\n\n  let greeting;\n  if (time >= 12 && time < 17) {\n    greeting = \"Good Afternoon\";\n  } else if (time >= 17 && time <= 23) {\n    greeting = \"Good evening\";\n  } else {\n    greeting = \"Good Morning\";\n  }\n\n  const handleStateChange = (state) => {\n    setMenuOpen(state.isMenuOpen);\n  }\n\n  const photo = account.account && account.account.photo;\n  const userDetails = account.account && account.account;\n\n  return (\n    <Layout>\n      <div className=\"web-header\">\n        <Headers photo={photo} userDetails={userDetails} handleStateChange={handleStateChange} />\n      </div>\n      <div className=\"mobile-header\">\n        <MenuContainer />\n        </div>\n      <Layout>\n        <div className=\"sidebar-component\">\n          <SideBar />\n        </div>\n       \n        <Row className=\"main-container\">\n          <Col xs=\"12\" xl=\"9\" className=\"content\">\n            {window.location.pathname === \"/account/profile\" ? null : (\n              <Row className=\"mb-4\">\n                <Col xs=\"12\" xl=\"12\">\n                  <h3><strong>{greeting}</strong>, {localStorageAuth().user && localStorageAuth().user.firstName}</h3>\n                </Col>\n              </Row>\n            )}\n            \n            <Row>\n              <Col xs=\"12\" xl=\"12\">\n                <Switch>\n                  <Route exact path={`${props.match.url}`} render={(props) => <Home {...props} />} />\n                  <Route exact path={`${props.match.url}/loan`} render={(props) => <Loan {...props} />} />\n                  <Route exact path={`${props.match.url}/savings`} render={(props) => <Savings {...props} />} />\n                  <Route exact path={`${props.match.url}/transactions`} render={(props) => <Transaction {...props} />} />\n                  <Route exact path={`${props.match.url}/profile`} render={(props) => <Profile {...props} />} />\n                </Switch>\n              </Col>\n            </Row>\n          </Col>\n          <Col xs=\"12\" xl=\"3\" className=\"side-tab\">\n            <TabSideBar user={user} />\n          </Col>\n        </Row>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Account;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/Forgot_password.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/business/BusinessLoan.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/business/GuarantorInformation.js",["271"],"import React from \"react\";\nimport { Col, Row, Input } from \"reactstrap\";\n// import { Button } from \"antd\";\nimport \"./Business.css\";\n\nconst GuarantorInformation = ({\n  fullName,\n  emailAddress,\n  handlePhoneNumber,\n  handleFullname,\n  handleRelationship,\n  relationship,\n  handleEmailAddress,\n  phoneNumber,\n  address,\n  handleAddress,\n  errorMsg,\n}) => {\n  return (\n    <div>\n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <Row className=\"mt-2\">\n            <Col xs=\"12\" xl=\"12\">\n              <label htmlFor=\"amount\">Full Name</label>\n              <Input value={fullName} onChange={(e) => handleFullname(e)} placeholder=\"Full name\" className=\"form-control\" />\n            </Col>\n           \n          </Row>\n          <Row className=\"mt-3\">\n            <Col xs=\"12\" xl=\"6\">\n              <label htmlFor=\"salary\">Relationship</label>\n              <Input \n                onChange={(e) => handleRelationship(e)} \n                id=\"salary\" value={relationship} \n                type=\"select\"\n              >\n                <option>Guarantor relationship</option>\n                <option value=\"brother\">Brother</option>\n                <option value=\"father\">Father</option>\n                <option value=\"mother\">Mother</option>\n                <option value=\"sister\">Sister</option>\n                <option value=\"uncle\">Uncle</option>\n                <option value=\"wife\">Wife</option>\n              </Input>\n            </Col>\n            <Col xs=\"12\" xl=\"6\">\n              <label htmlFor=\"payday\">Phone Number</label>\n              <Input type=\"tel\" onChange={(e) => handlePhoneNumber(e)} value={phoneNumber} id=\"payday\" placeholder=\"Phone number\" className=\"form-control\" />\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col xs=\"12\" xl=\"12\">\n              <label htmlFor=\"email\">Email Address</label>\n              <Input value={emailAddress} onChange={(e) => handleEmailAddress(e)} value={emailAddress} id=\"email\" placeholder=\"Email address\" className=\"form-control\" />\n            </Col>\n          </Row>\n\n          <Row className=\"mt-3\">\n            <Col xs=\"12\" xl=\"12\">\n              <label htmlFor=\"address\">Address</label>\n              <Input \n                onChange={(e) => handleAddress(e)} \n                value={address} id=\"address\" \n                placeholder=\"319, Akin Ogunlewe Street, Off Ligali Ayorinde, VI, Lagos.\" \n                className=\"form-control\" />\n            </Col>\n          </Row>\n        </Col>\n        <Col xs=\"12\" xl=\"6\">\n\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default GuarantorInformation;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/ResetPassword.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/Pagination/Pagination.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/BookingsLoan/BookingsLoan.js",["272"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Row, Input, Alert } from \"reactstrap\";\nimport { Icon } from \"semantic-ui-react\";\nimport { Button } from \"antd\";\nimport querystring from \"query-string\";\n\nimport \"./BookingsLoan.css\";\nimport { postBookingLoan } from \"../../store/actions/actions_loan\";\nimport { creditLogin } from \"../../store/actions/actions_onboarding\";\n\nconst BookingsLoan = (props) => {\n  const loans = useSelector(state => state.loan);\n  const dispatch = useDispatch();\n  const [ monthlyRemitance, setMonthlyRemittance ] = useState(0);\n  const [values, setValues ] = useState({ \n    amount: \"\", \n    jobStartDate: \"\", \n    jobEndDate: \"\", \n    purpose: \"\", \n    tenure: \"\",\n    fullName: \"\",\n    email: \"\",\n    workId: \"\",\n    bvn: \"\",\n    phone: \"\",\n    dateOfBirth: \"\",\n    businessAddress: \"\",\n    bookingStatus: \"\",\n    bankName: \"\",\n    accountName: \"\",\n    accountNumber: \"\",\n    address: \"\",\n  });\n\n  const [ errorMsg, setErrorMsg ] = useState([]);\n  const [ error, setError ] = useState(\"\");\n  const [ message, setMessage ] = useState(\"\");\n  const [ isAttested, setIsAttested ] = useState(false);\n  const attestation = useRef(null);\n  const sessionCode = localStorage.getItem(\"sessionCode\");\n  const params = querystring.parse(props.location.search, { ignoreQueryPrefix: true });\n  const { \n    amount, \n    jobEndDate, \n    jobStartDate, \n    tenure, \n    fullName,\n    email,\n    workId,\n    bvn,\n    phone,\n    dateOfBirth,\n    businessAddress,\n    bookingStatus,\n    purpose,\n    bankName,\n    accountName,\n    accountNumber,\n    businessName,\n    businessEmail,\n    registrationNumber,\n    address,\n  } = values;\n\n  useEffect(() => {\n    if (loans.error) {\n      setErrorMsg(loans.error && loans.error);\n      if (!Array.isArray(loans.error)) setError(loans.error && loans.error);\n    }\n  }, [ loans ]);\n\n  useEffect(() => {\n    dispatch(creditLogin());\n  }, [ dispatch ]);\n\n  useEffect(() => {\n    if (tenure > 0 && amount > 0) {\n      setMonthlyRemittance(amount * 0.06 + (amount/tenure));\n    }\n  }, [ amount, tenure ]);\n\n  useEffect(() => {\n    if (loans.bookingsSuccess) {\n      setError(\"\");\n      setErrorMsg(\"\")\n      setMessage(\"Your request was sent successfully\");\n    }\n  }, [ loans ]);\n\n  useEffect(() => {\n    setValues({ \n      ...values, \n      bvn: params.bvn,\n      phone: params.phone,\n      dateOfBirth: params.dateOfBirth,\n      businessAddress: params.businessAddress,\n      bookingStatus: params.bookingStatus,\n      // workId: params.identityCard,\n      jobEndDate: params.jobEndDate,\n      jobStartDate: params.jobStartDate,\n      fullName: params.fullName,\n      email: params.email,\n      workId: params.idCard,\n      bankName: params.bankName,\n      accountName: params.accountName,\n      accountNumber: params.accountNumber,\n      businessName: params.businessName,\n      businessEmail: params.businessEmail,\n      registrationNumber: params.registrationNumber,\n      address: params.address,\n    })\n  }, [ ]);\n\n  const handleChange = (e) => {\n    setError(\"\");\n    setErrorMsg(\"\");\n    setMessage(\"\");\n    const { name, value } = e.target;\n    setValues({ \n      ...values, \n      [name]: value,\n      fullName,\n      email,\n      workId,\n      bvn,\n      phone,\n      dateOfBirth,\n      businessAddress,\n      bookingStatus,\n      accountName,\n      accountNumber,\n      bankName,\n      businessName,\n      businessEmail,\n      registrationNumber,\n      address,\n    });\n  }\n\n  const handleSubmit = () => {\n    setError(\"\");\n    setErrorMsg(\"\")\n    const data = { \n      amount, \n      jobEndDate, \n      jobStartDate,\n      tenure,\n      bvn,\n      phone,\n      dateOfBirth,\n      businessAddress,\n      bookingStatus,\n      workId,\n      amountToPay: parseInt(amount) + parseInt(monthlyRemitance),\n      fullName,\n      businessName,\n      businessEmail,\n      registrationNumber,\n      accountName,\n      accountNumber,\n      bankName,\n      email,\n      sessionCode,\n      address,\n    }\n\n    dispatch(postBookingLoan(data));\n  }\n\n  const handleAttestation = () => {\n    setIsAttested(attestation.current && attestation.current.checked);\n  }\n\n  const handleCancel = () => {\n    setValues({\n      amount: \"\", \n      jobStartDate: \"\", \n      jobEndDate: \"\", \n      purpose: \"\", \n      tenure: \"\",\n      fullName: \"\",\n      email: \"\",\n      workId: \"\",\n      bvn: \"\",\n      phone: \"\",\n      dateOfBirth: \"\",\n      businessAddress: \"\",\n      bookingStatus: \"\",\n      bankName: \"\",\n      accountName: \"\",\n      accountNumber: \"\",\n      address: \"\",\n    })\n  }\n\n  return (\n    <div className=\"bookings-container\">\n      <Row className=\"justify-content-center\">\n        <Col xs=\"10\" xl=\"3\" className=\"form-wrapper1 pb-5\">\n          <Row>\n            <Col xs=\"12\">\n              <h4 className=\"heading\"><strong>Loan Request</strong></h4>\n            </Col>\n          </Row>\n\n          {error.length > 0 ? \n          \n              <Alert color=\"danger\" style={{ color: \"#ff0000\" }}>{error}</Alert>\n            : null}\n\n          {message.length > 0 ? ( \n            <Alert className=\"text-center\" style={{ color: \"#0B70A5\" }}>{message}</Alert> \n        ) : null}\n\n          <Row className=\"mt-4\">\n            <Col xs=\"12\" xl=\"12\">\n              <label htmlFor=\"amount\">How much advance do you require? (NGN)</label>\n              <Input name=\"amount\" onChange={(e) => handleChange(e)} value={amount} id=\"amount\" placeholder=\"20000\" />\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"amount\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n          </Row>\n\n          <Row className=\"mt-4\">\n            <Col xs=\"6\" xl=\"6\">\n              <label>Loan Tenure</label>\n              <Input type=\"select\" value={tenure} id=\"b-tenure\" name=\"tenure\" onChange={(e) => handleChange(e)}>\n                <option>Select Loan Tenure</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n              </Input>\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"tenure\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n          </Row>\n\n          <Row className=\"mt-4\">\n            <Col xs=\"12\" xl=\"12\">\n              <label htmlFor=\"address\">Purpose</label>\n              <Input value={purpose} name=\"purpose\" onChange={(e) => handleChange(e)} id=\"purpose\" type=\"textarea\" placeholder=\"Tell us what you want this loan for...\" />\n              {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"purpose\" ? (<><span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> <br /></>) : null): null}\n            </Col>\n          </Row>\n\n          <Row className=\"mt-4\">\n            <Col xs=\"1\" xl=\"1\">\n              <input onChange={handleAttestation} ref={attestation} type=\"checkbox\" style={{ marginTop: \"-20px\"}} />\n            </Col>\n            <Col xs=\"11\" xl=\"11\">\n              <p className=\"attestatn\">\n                I authorize Gare Advance Financial Limited to make any enquiry it considers necessary \n                and appropriate for the purpose of evaluating this application.\n              </p>\n              {isAttested ? null : <p style={{ color: \"#ff0000\" }}><Icon color=\"red\" size={\"big\"} name=\"exclamation triangle\" />You must check the authorization box to be able to continue</p>}\n            </Col>\n          </Row>\n            \n          <Row className=\"mt-5 button-row\">\n            <Col xs=\"12\" xl=\"6\">\n              <Button type=\"reset\" onClick={handleCancel} className=\"booking-discard-button\">Cancel</Button>\n            </Col>\n            <Col xs=\"12\" xl=\"6\">\n              {loans && loans.bookingsLoading ? ( \n              <Button className=\"personal-info-button\" loading primary>Loading</Button>): <Button disabled={isAttested ? false : true} onClick={handleSubmit} className=\"booking-loan-button\">Send Request</Button>\n              }\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default BookingsLoan;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/onboarding/Prepage.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/store/actions/actions_loan/index.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/store/reducers/reducer_upload.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/helper/authenticate.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/profile/bvn/BVN.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/salary/AccountInformation.js",["273","274"],"import React from \"react\";\nimport { Col, Row, Input, Card, CardBody } from \"reactstrap\";\nimport { Button } from \"antd\";\nimport \"./Salary.css\";\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\nconst AccountInformation = ({\n  userDetails,\n  onAttestation,\n  acctAttestation,\n}) => {\n  const firstName = userDetails && userDetails.bank && userDetails.bank.owner && userDetails.bank.owner.firstName;\n  const lastName = userDetails && userDetails.bank && userDetails.bank.owner && userDetails.bank.owner.lastName;\n  const accountNumber = userDetails && userDetails.bank && userDetails.bank.accountNumber;\n  const accountType = userDetails && userDetails.bank && userDetails.bank.accountType;\n  const name = userDetails && userDetails.bank && userDetails.bank.name;\n\n  console.log(acctAttestation, \"the account attestation\")\n  return (\n    <div>\n      <Row className=\"mt-3\">\n        <Col xs=\"12\" xl=\"5\">\n          <Card id=\"account-card\">\n            <CardBody>\n              <Row className=\"mt-2\">\n                <Col xs=\"12\" xl=\"12\" className=\"pl-4\">\n                  <p className=\"account-type\">\n                    {accountType ? accountType : \"No data\"}\n                  </p>\n                  <p className=\"bank-name\">{name ? name : \"No data\"}</p>\n                  <p className=\"account-number\">{accountNumber ? accountNumber : \"No data\"}</p>\n                </Col>\n              </Row>\n              \n              <Row className=\"mt-3\">\n                <Col xs=\"12\" xl=\"12\" className=\"pl-4\">\n                  <p className=\"account-type\">Account Name</p>\n                  <p className=\"account-number\">\n                    {firstName ? firstName : \"No data\"} {\" \"} {lastName ? lastName : \"No data\"}\n                  </p>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col xs=\"12\" xl=\"6\" className=\"pt-5\">\n          {userDetails && userDetails.pendingLoan ? null : <Button onClick={() => window.location.href=\"/account/profile\"} className=\"change-button\">Change</Button>}\n        </Col>\n      </Row>\n      <Row className=\"mt-3\">\n        <Col xs=\"12\" xl=\"5\"></Col>\n      </Row>\n      <p className=\"mt-2\">Attestation</p>\n      <Row>\n        <Col xs=\"1\" xl=\"1\">\n          <input onChange={onAttestation} ref={acctAttestation} type=\"checkbox\" style={{ marginTop: \"-20px\"}} />\n        </Col>\n        <Col xs=\"11\" xl=\"5\">\n          <p className=\"attestation\">\n            I certify that all the information provided by me above is true, correct and complete. \n          I authorize Gare Advance Financial Limited to make any enquiry it considers necessary and appropriate for \n          the purpose of evaluating this application.\n          </p>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default AccountInformation;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/profile/Profile.js",["275","276","277","278","279"],"import Avatar from \"antd/lib/avatar/avatar\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Progress } from \"antd\";\nimport { Card, CardBody, Input, Col, Row, Modal, ModalBody, ModalHeader, Spinner, Alert } from \"reactstrap\";\nimport { BankFilled, CreditCardFilled } from \"@ant-design/icons\";\nimport PersonalInfo from \"./personalInfo/PersonalInfo\";\nimport Bank from \"./bank/Bank\";\nimport BVN from \"./bvn/BVN\";\nimport Employment from \"./employment/Employment\";\nimport { localStorageAuth } from \"../../../helper/authenticate\";\nimport Logo from \"../../../assets/logo1.svg\";\nimport { changePassword } from \"../../../store/actions/actions_onboarding\";\nimport { getUser, bankInfo, personalInfo, photoUpload } from \"../../../store/actions/account\";\nimport { employmentInformation } from \"../../../store/actions/account\";\nimport { bvnInformation } from \"../../../store/actions/account\";\nimport { uploader, profilePicture } from \"../../../store/actions/action_file_upload\";\nimport \"./Profile.css\";\n\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const account = useSelector(state => state.accountReducer);\n  const accounts = useSelector(state => state.account);\n  const upload = useSelector(state => state.upload);\n  const id_card = useSelector(state => state.upload.idCard);\n  const [ profilePix, setProfilePix ] = useState({});\n  const [ profilePict, setProfilePict ] = useState(\"\");\n  const [ isPersonalInfo, setPersonalInfo ] = useState(false);\n  const [ isBVN, setIsBVN ] = useState(false);\n  const [ isEmployment, setEmployment ] = useState(false);\n  const [ isBank, setBank ] = useState(false);\n  const [ errorMsg, setErrorMsg ] = useState([]);\n  const [ error, setError ] = useState(\"\");\n  const [ message, setMessage ] = useState(\"\");\n  const [ isEmailReset, setEmailReset ] = useState(false);\n  const [ newPassword, setNewPassword ] = useState(\"\");\n  const [ oldPassword, setOldpassword ] = useState(\"\");\n  const [ confirmPassword, setConfirmPassword ] = useState(\"\");\n  const [ user, setUser ] = useState({});\n  const [ userDetails, setUserDetails ] = useState({});\n  // Bank information parameters\n  const [ bankName, setBankName ] = useState(\"\");\n  const userId = localStorageAuth().user && localStorageAuth().user._id;\n  const [ accountNumber, setAccountNumber ] = useState(\"\");\n  const [ accountName, setAccountName ] = useState(\"\");\n  const [ accountType, setAccountType ] = useState(\"\");\n  // Employment information variables\n  const [ company_name, setCompanyName ] = useState(\"\");\n  const [ company_address, setCompanyAddress ] = useState(\"\");\n  const [ jobPosition, setJopPosition ] = useState(\"\");\n  const [ employmentStatus, setEmploymentStatus ] = useState(\"\");\n  const employmentType = [ \"full time\", \"part time\", \"contract\", \"outsourced\", \"self employed\" ];\n  // BVn information variables\n  const [ bvn, setBVN ] = useState(\"\");\n  const [ phone, setPhone ] = useState(\"\");\n  const [ dateOfBirth, setDateOfBirth ] = useState(\"\");\n  // Personal information variables\n  const [ firstName, setFirstName ] = useState();\n  const [ lastName, setLastName ] = useState(\"\");\n  const [ address, setAddress ] = useState(\"\");\n  \n  const [ meansOfIdentification, setMeansOfIdentification ] = useState({});\n  const [ uploadedPhoto, setUploadedPhoto ] = useState(\"\");\n\n  \n  useEffect(() => {\n    if (accounts && accounts.error) {\n      setErrorMsg(accounts.error);\n      if (!Array.isArray(account.error))  setError(account.error);\n    } else if (accounts.changePasswordSuccess === true) {\n      setMessage(\"Your password has been changed successfully\");\n      setConfirmPassword(\"\");\n      setNewPassword(\"\");\n      setOldpassword(\"\");\n      setTimeout(() => { \n        setEmailReset(false);\n        setMessage(\"\");\n      }, 2000)\n    }\n  }, [ accounts ]);\n\n  useEffect(() => {\n    if (upload.success) {\n      setUploadedPhoto(upload.idCard && upload.idCard.secure_url);\n    } else if (upload.error) {\n      setErrorMsg(upload.error.message);\n    }\n  }, [ id_card ]);\n\n  useEffect(() => {\n    setUserDetails(account.account);\n    if (account.account && account.account && account.account.photo) {\n      setProfilePict(account.account && account.account.photo)\n    }\n  }, [ account ]);\n\n  // Set firstName, lastName and phone number\n  useEffect(() => {\n    if (userDetails && userDetails.hasOwnProperty(\"firstName\")) {\n      setFirstName(userDetails.firstName);\n      setLastName(userDetails.lastName);\n      setPhone(userDetails.phoneNumber);\n    }\n  }, [ userDetails ]);\n\n  useEffect(() => {\n    const user = localStorageAuth().user && localStorageAuth().user;\n    setUser(user);\n  }, []);\n\n  useEffect(() => {\n    if (user && user._id) {\n      const data = { userId: user._id }\n      dispatch(getUser(data));\n    }\n    \n  }, [ user,dispatch ]);\n\n  // Bank information update section\n  useEffect(() => {\n    if (account && account.error) {\n      setErrorMsg(account.error);\n      if (!Array.isArray(account.error))  setError(account.error);\n    } else if (account.bankSuccess) {\n      setMessage(\"Your bank information has been updated\");\n      setAccountName(\"\");\n      setAccountNumber(\"\");\n      setAccountType(\"\");\n      setBankName(\"\");\n      setTimeout(() => {\n        setMessage(\"\")\n        setBank(false);\n      }, 1500);\n    }\n  }, [ account ]);\n\n  const handleAccountName = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setAccountName(e.target.value);\n  }\n\n  const handleAccountType = (e) => {\n    setErrorMsg(\"\");\n    setAccountType(e.target.value);\n  }\n\n  const handleAccountNumber = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setAccountNumber(e.target.value);\n  }\n\n  const handleBankName = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setBankName(e.target.value);\n  }\n\n  const handleBankSubmit = () => {\n    const data = { accountType, accountName, accountNumber, bankName, userId}\n    dispatch(bankInfo(data));\n  }\n\n  const handleBankClear = () => {\n    setAccountName(\"\");\n    setAccountNumber(\"\");\n    setAccountType(\"\");\n    setBankName(\"\");\n    setBank(false);\n  }\n// bank handlers end here\n\n\n  // Employment information handler here\n  useEffect(() => {\n    if (account && account.error) {\n      setErrorMsg(account.error);\n      if (!Array.isArray(account.error))  setError(account.error);\n    } else if (account.employmentSuccess === true) {\n      setMessage(\"Your employment information has been updated\");\n      setEmploymentStatus(\"\");\n      setCompanyAddress(\"\");\n      setJopPosition(\"\");\n      setCompanyName(\"\");\n      setTimeout(() => {\n        setMessage(\"\")\n        setEmployment(false);\n      }, 1500);\n    }\n  }, [ account ]);\n\n  const handleCompanyName = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setCompanyName(e.target.value);\n  }\n\n  const handleCompanyAddress = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setCompanyAddress(e.target.value);\n  }\n\n  const handleJobPosition = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setJopPosition(e.target.value);\n  }\n\n  const handleEmploymentType = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setEmploymentStatus(e.target.value);\n  }\n\n  const handleEmploymentSubmit = () => {\n    const data = { \n      employmentType: \n      employmentStatus, \n      company_address, company_name, \n      jobPosition, \n      userId,\n    }\n    dispatch(employmentInformation(data));\n  }\n\n  const handleEmploymentClear = () => {\n    setEmploymentStatus(\"\");\n    setCompanyAddress(\"\");\n    setJopPosition(\"\");\n    setCompanyName(\"\");\n    setEmployment(false);\n  }\n  // Employment information handler ends here\n\n\n  // BVN information handler here\n  useEffect(() => {\n    if (account && account.error) {\n      setErrorMsg(account.error);\n      if (!Array.isArray(account.error))  setError(account.error);\n    } else if (account.bvnSuccess === true) {\n      setMessage(\"Your BVN information has been updated\");\n      setBVN(\"\");\n      setDateOfBirth(\"\");\n      setPhone(\"\");\n      setTimeout(() => {\n        setMessage(\"\");\n        setIsBVN(false);\n      }, 1500);\n    }\n  }, [ account ]);\n\n  const handleBVN = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setBVN(e.target.value);\n  }\n\n  const handleDateOfBirth = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setDateOfBirth(e.target.value);\n  }\n\n  const handlePhone = (e) => {\n    setErrorMsg(\"\");\n    setError(\"\")\n    setPhone(e.target.value);\n  }\n\n  const handleBVNSubmit = () => {\n    const data = { bvn, phone, dateOfBirth, userId}\n    dispatch(bvnInformation(data));\n  }\n\n  const handleBVNClear = () => {\n    setBVN(\"\");\n    setPhone(\"\");\n    setDateOfBirth(\"\");\n    setError(\"\");\n    setErrorMsg(\"\");\n    setMessage(\"\")\n    setIsBVN(false);\n  }\n  // BVN information handler ends here\n\n\n  // Personal information handlers start here\n  const formData = new FormData();\n\n  formData.append('file', meansOfIdentification);\n  // replace this with your upload preset name\n  formData.append('upload_preset', \"gare-upload-preset\");\n\n  const options = {\n    method: 'POST',\n    body: formData,\n  };\n\n  useEffect(() => {\n    if (meansOfIdentification && meansOfIdentification.name) {\n      dispatch(uploader(options));\n    }\n  }, [ meansOfIdentification, dispatch ]);\n\n\n  const handleUpload = () => {\n    dispatch(uploader(options));\n  }\n\n  const handlePhoto = (e) => {\n    setMeansOfIdentification(e.target.files[0]);\n  }\n\n  const handleFirstName = (e) => {\n    setError(\"\");\n    setErrorMsg(\"\");\n    setMessage(\"\");\n    setFirstName(e.target.value);\n  }\n\n  const handleLastName = (e) => {\n    setError(\"\");\n    setErrorMsg(\"\");\n    setMessage(\"\");\n    setLastName(e.target.value);\n  }\n\n  const handleAddress = (e) => {\n    setError(\"\");\n    setErrorMsg(\"\");\n    setMessage(\"\");\n    setAddress(e.target.value);\n  }\n\n  const handlePersonalSubmit = () => {\n    const data = {\n      firstName,\n      lastName,\n      phoneNumber: phone,\n      meansOfIdentification: uploadedPhoto,\n      address,\n      dateOfBirth,\n      userId,\n    }\n\n    dispatch(personalInfo(data));\n  }\n\n  useEffect(() => {\n    if (account && account.error) {\n      setErrorMsg(account.error);\n      if (!Array.isArray(account.error)) setError(account.error);\n    } \n  }, [ account ]);\n\n  useEffect(() => {\n    if (account.personalInfoSuccess) {\n      setErrorMsg(\"\");\n      setMessage(\"Your personal information has been updated\");\n      setFirstName(\"\");\n      setLastName(\"\");\n      setPhone(\"\");\n      setDateOfBirth(\"\")\n      setUploadedPhoto(\"\");\n      setAddress(\"\")\n      setTimeout(() => {\n        setMessage(\"\")\n        setPersonalInfo(false);\n      }, 1500);\n    }\n  }, [ account ]);\n\n  const handlePersonalClear = () => {\n    setError(\"\");\n    setErrorMsg(\"\");\n    setMessage(\"\");\n    setPersonalInfo(false);\n  }\n\n  // Personal information handlers end here\n\n  const toggleResetEmail = () => {\n    setEmailReset(false);\n    setConfirmPassword(\"\");\n    setNewPassword(\"\");\n    setOldpassword(\"\");\n  }\n\n  const toggleBankInfo = () => {\n    setBank(false);\n  }\n\n  const toggleBVN = () => {\n    setIsBVN(false);\n  }\n\n  const toggleEmployment = () => {\n    setEmployment(false);\n  }\n\n  const togglePersonal = () => {\n    setPersonalInfo();\n  }\n\n  const handleOldPassword = (e) => {\n    setError(\"\");\n    setErrorMsg(\"\");\n    setOldpassword(e.target.value);\n  }\n\n  const handleNewPassword = (e) => {\n    setError(\"\");\n    setErrorMsg(\"\");\n    setNewPassword(e.target.value);\n  }\n\n  const handleConfirmPassword = (e) => {\n    setError(\"\");\n    setErrorMsg(\"\");\n    setConfirmPassword(e.target.value);\n  }\n\n  const handleSubmit = () => {\n    const data = { oldPassword, newPassword, email: user.email };\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords did not match\");\n      return;\n    } else {\n      dispatch(changePassword(data));\n    }\n  }\n\n  useEffect(() => {\n    if (profilePix && profilePix.name) {\n      dispatch(profilePicture(profilePix));\n    }\n  }, [ profilePix, dispatch ]);\n\n  useEffect(() => {\n    if (upload.profileSuccess) {\n      setProfilePict(upload.upload && upload.upload.secure_url)\n    } else if (upload.error) {\n      setErrorMsg(upload.error.message);\n    }\n  }, [ upload ]);\n\n  useEffect(() => {\n    if (profilePict && profilePict.length > 0) {\n      const data = {\n        photo: profilePict,\n        userId\n      }\n      dispatch(photoUpload(data));\n    }\n  }, [ profilePict, dispatch ]);\n\n  return (\n    <div>\n      <Row>\n        <Col xs=\"12\" xl=\"8\">\n          <Row>\n            <Col xs=\"3\" xl=\"3\">\n              <Avatar src={profilePict && profilePict. length > 0 ? profilePict : userDetails && userDetails.photo} size={140} id=\"profile-avatar\" /> \n              <Input type=\"file\" id=\"profile-picture-input\" accept=\"image/jpeg,image/jpg,image/png\" onChange={(e) => setProfilePix(e.target.files[0])} />\n            </Col>\n            <Col xs=\"9\" xl=\"7\" className=\"profile-detail\">\n              <h4>Onoja Matthew</h4>\n              <p style={{ lineHeight: \".5em\", color: \"#04040466\" }}>{userDetails ? userDetails.email : user && user.email}</p>\n              <p style={{ lineHeight: \".5em\", color: \"#04040466\" }}>{userDetails ? userDetails.phoneNumber : user && user.phoneNumber}</p>\n              <Button \n                style={{ \n                  color: \"#0B70A5\", \n                  background: \"#0B70A524\", \n                  width: \"147px\", \n                  height: \"26px\",\n                  borderRadius: \"13px\",\n                }}\n                onClick={() => setEmailReset(true)}\n              >Change password</Button>\n            </Col>\n          </Row>\n        </Col>\n        <Col xs=\"12\" xl=\"4\" className=\"profile-card-container\">\n          <Card id=\"profile-status\">\n            <CardBody>\n              <Row>\n                <Col xs=\"3\" xl=\"3\">\n                  <Progress type=\"circle\" percent={account.account ? account.account.profilePercentage : 0} width={70} />\n                </Col>\n                <Col xs=\"9\" xl=\"9\">\n                  <p>Profile Information</p>\n                  <p className=\"complete\">\n                    {account.account && account.account.profilePercentage === 100 ? \"Perfect! Your profile is complete\" : \"Complete your profile to unlock funds\"}\n                  </p>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <Card style={{ height: \"88px\", background: \"#fff\"}}>\n            <CardBody>\n              <Row className=\"pt-1\">\n                <Col xs=\"10\" xl=\"10\">\n                  <p><i className=\"ri-user-3-fill\" style={{ color: \"#E87C23\", marginRight: \"10px\"}}></i> <span style={{ fontSize: \"16px\", marginTop: \"-20px !important\"}}>Personal Information</span></p>\n                </Col>\n                <Col xs=\"2\" xl=\"2\" className=\"pt-2 pr-2\">\n                  <Button \n                    className=\"add-button\"\n                    onClick={() => setPersonalInfo(true)}\n                  >\n                    Edit\n                  </Button>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <Card style={{ height: \"88px\", background: \"#fff\"}}>\n            <CardBody>\n              <Row className=\"pt-2\">\n                <Col xs=\"10\" xl=\"10\">\n                  <p style={{ fontSize: \"16px\"}}><CreditCardFilled style={{ color: \"#8625CF\", marginRight: \"10px\" }} /> Bank Verification Number (BVN)</p>\n                </Col>\n                <Col xs=\"2\" xl=\"2\" className=\"pt-2 pr-2\">\n                  <Button \n                      className=\"add-button\"\n                      onClick={() => setIsBVN(true)}\n                    >\n                    Add\n                  </Button>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <Card style={{ height: \"88px\", background: \"#fff\"}}>\n            <CardBody>\n              <Row className=\"pt-2\">\n                <Col xs=\"10\" xl=\"10\">\n                <BankFilled style={{ color: \"#0B70A5\", marginRight: \"10px\", fontSize: \"22px\" }} /> <span style={{ fontSize: \"16px\"}}>Employment Information</span>\n                </Col>\n                <Col xs=\"2\" xl=\"2\" className=\"pt-2 pr-2\">\n                  <Button \n                    className=\"add-button\"\n                    onClick={() => setEmployment(true)}\n                  >\n                    Add\n                  </Button>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <Card style={{ height: \"88px\", background: \"#fff\"}}>\n            <CardBody>\n              <Row className=\"pt-2\">\n                <Col xs=\"10\" xl=\"10\">\n                  <CreditCardFilled style={{ color: \"#8625CF\", marginRight: \"10px\", fontSize: \"22px\" }} /> <span style={{ fontSize: \"16px\"}}>Bank Account Information</span>\n                </Col>\n                <Col xs=\"2\" xl=\"2\" className=\"pt-2 pr-2\">\n                  <Button\n                    className=\"add-button\"\n                    onClick={() => setBank(true)}\n                  >\n                    Add\n                  </Button>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col id=\"personalModal\">\n          <Modal isOpen={isPersonalInfo} toggle={togglePersonal}>\n            <ModalHeader toggle={togglePersonal}></ModalHeader>\n            <ModalBody>\n              <PersonalInfo \n                handleAddress={handleAddress}\n                handleFirstName={handleFirstName}\n                handleLastName={handleLastName}\n                handlePersonalClear={handlePersonalClear}\n                handleDateOfBirth={handleDateOfBirth}\n                handlePhone={handlePhone}\n                lastName={lastName}\n                firstName={firstName}\n                // photo={meansOfIdentification}\n                dateOfBirth={dateOfBirth}\n                address={address}\n                phone={phone}\n                error={error}\n                errorMsg={errorMsg}\n                message={message}\n                handlePhoto={handlePhoto}\n                handleUpload={handleUpload}\n                uploadedPhoto={uploadedPhoto}\n                account={account}\n                upload={upload}\n                userDetail={userDetails}\n                handlePersonalSubmit={handlePersonalSubmit}\n              />\n            </ModalBody>\n          </Modal>\n        </Col>\n      </Row>\n         \n      <Row>\n        <Col id=\"bvn-modal\">\n          <Modal isOpen={isBVN} toggle={toggleBVN}>\n            <ModalHeader toggle={toggleBVN}></ModalHeader>\n            <ModalBody>\n              <BVN \n                setIsBVN={setIsBVN}\n                bvn={bvn}\n                phone={phone}\n                dateOfBirth={dateOfBirth}\n                error={error}\n                errorMsg={errorMsg}\n                message={message}\n                userId={userId}\n                handleBVN={handleBVN}\n                handleDateOfBirth={handleDateOfBirth}\n                handlePhone={handlePhone}\n                handleBVNSubmit={handleBVNSubmit}\n                handleBVNClear={handleBVNClear}\n                account={account}\n              />\n            </ModalBody>\n          </Modal>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col id=\"employment-modal\">\n          <Modal isOpen={isEmployment} toggle={toggleEmployment}>\n            <ModalHeader toggle={toggleEmployment}></ModalHeader>\n            <ModalBody>\n              <Employment \n                setEmployment={setEmployment}\n                message={message}\n                error={error}\n                errorMsg={errorMsg}\n                company_name={company_name}\n                company_address={company_address}\n                jobPosition={jobPosition}\n                employmentStatus={employmentStatus}\n                employmentType={employmentType}\n                userId={userId}\n                handleEmploymentClear={handleEmploymentClear}\n                handleEmploymentSubmit={handleEmploymentSubmit}\n                handleEmploymentType={handleEmploymentType}\n                handleCompanyAddress={handleCompanyAddress}\n                handleCompanyName={handleCompanyName}\n                handleJobPosition={handleJobPosition}\n                account\n              />\n            </ModalBody>\n          </Modal>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col id=\"bank-modal\">\n          <Modal isOpen={isBank} toggle={toggleBankInfo}>\n            <ModalHeader toggle={toggleBankInfo}></ModalHeader>\n            <ModalBody>\n              <Bank \n                accountNumber={accountNumber}\n                accountName={accountName}\n                accountType={accountType}\n                setBank={setBank}\n                handleBankSubmit={handleBankSubmit}\n                handleBankClear={handleBankClear}\n                handleBankName={handleBankName}\n                handleAccountType={handleAccountType}\n                handleAccountNumber={handleAccountNumber}\n                handleAccountName={handleAccountName}\n                errorMsg={errorMsg}\n                message={message}\n                error={error}\n                account={account}\n              />\n            </ModalBody>\n          </Modal>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Modal isOpen={isEmailReset} toggle={toggleResetEmail}>\n            <ModalHeader toggle={toggleResetEmail}></ModalHeader>\n            <ModalBody>\n              <div className=\"m-4\">\n                <Row className=\"justify-content-center\">\n                  <Col xs=\"2\" xl=\"3\" className=\"pl-4\">\n                    <img src={Logo} alt=\"logo\" className=\"p-logo\"/>\n                  </Col>\n                </Row>\n\n                <Row className=\"justify-content-center\">\n                  <Col xs=\"7\" xl=\"7\">\n                    <h4 className=\"text-center\"><strong>Change Password</strong></h4>\n                    <p className=\"text-center\">Reset your password</p>\n                  </Col>\n                </Row>\n\n                {error.length ? (\n                  <Row className=\"justify-content-center\">\n                    <Col xs=\"7\" xl=\"9\">\n                      <p className=\"text-center\" style={{ color: \"#ff0000\" }}>{error}</p>\n                    </Col>\n                  </Row>\n                ) : null}\n\n                {message.length ? (\n                  <Alert className=\"text-center\" style={{ color: \"#0B70A5\" }}>{message}</Alert>\n                ) : null}\n\n                <Row className=\"mt-4\">\n                  <Col xs=\"12\" xl=\"12\">\n                    <label htmlFor=\"opassword\">Old Password</label>\n                    <Input value={oldPassword} onChange={(e) => handleOldPassword(e)} type=\"password\" id=\"opassword\" placeholder=\"Old Password\" className=\"form-controller\" />\n                    {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"oldPassword\" ? <span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> : null): null}\n                  </Col>\n                </Row>\n\n                <Row className=\"mt-4\">\n                  <Col xs=\"12\" xl=\"12\">\n                    <label htmlFor=\"password\">New Password</label>\n                    <Input value={newPassword} onChange={(e) => handleNewPassword(e)} type=\"password\" id=\"password\" placeholder=\"New Password\" className=\"form-controller\" />\n                    {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"newPassword\" ? <span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> : null): null}\n                  </Col>\n                </Row>\n\n                <Row className=\"mt-4\">\n                  <Col xs=\"12\" xl=\"12\">\n                    <label htmlFor=\"cpassword\">Confirm Password</label>\n                    <Input value={confirmPassword} onChange={(e) => handleConfirmPassword(e)} type=\"password\" id=\"cpassword\" placeholder=\"Confirm Password\" className=\"form-controller\" />\n                    {Array.isArray(errorMsg) && errorMsg.length > 0 ? errorMsg.map((error, i) => error.param === \"email\" ? <span key={i} style={{ color: \"#ff0000\", fontSize: \"12px\"}}>{error.msg}</span> : null): null}\n                  </Col>\n                </Row>\n\n                <Row className=\"mt-5 mb-5\">\n                  <Col xs=\"12\" xl=\"12\">\n                    {accounts.changePasswordLoading === true ? (<div className=\"text-center\"><Spinner color=\"primary\" /></div>) : (<Button onClick={handleSubmit} className=\"reg-button\">Submit</Button>)}\n                  </Col>\n                </Row>\n              </div>\n            </ModalBody>\n          </Modal>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Profile;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/savings/Savings.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/profile/personalInfo/PersonalInfo.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/store/reducers/account_reducer.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/salary/HRInformation.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/profile/bank/Bank.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/header/Headers.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/loan/business/BusinessInformation.js",["280"],"import React from \"react\";\nimport { Col, Row, Input } from \"reactstrap\";\n\nconst BusinessInformation = ({\n  businessType,\n  handleBusinessType,\n  handleBusinessName,\n  businessName,\n  handleRegistrationNumber,\n  registrationNumber,\n  emailAddress,\n  handleEmailAddress,\n  BusinessAddress,\n  handleBusinessAddress,\n}) => {\n\n  return (\n    <div>\n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <Row className=\"mt-2\">\n            <Col xs=\"12\" xl=\"12\">\n              <label htmlFor=\"amount\">Business Name</label>\n              <Input value={businessName} onChange={(e) => handleBusinessName(e)} placeholder=\"Business Name\" className=\"form-control\" />\n            </Col>\n           \n          </Row>\n          <Row className=\"mt-3\">\n            <Col xs=\"12\" xl=\"6\">\n              <label htmlFor=\"salary\">Business Type</label>\n              <Input \n                onChange={(e) => handleBusinessType(e)} \n                id=\"salary\" \n                type=\"select\"\n              >\n                <option>-Select business type-</option>\n                <option value=\"sme\">SME</option>\n              </Input>\n            </Col>\n            <Col xs=\"12\" xl=\"6\">\n              <label htmlFor=\"payday\">Registration Number</label>\n              <Input onChange={(e) => handleRegistrationNumber(e)} value={registrationNumber} id=\"payday\" placeholder=\"Registration number\" className=\"form-control\" />\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col xs=\"12\" xl=\"12\">\n              <label htmlFor=\"email\">Email Address</label>\n              <Input value={emailAddress} type=\"email\" onChange={(e) => handleEmailAddress(e)} value={emailAddress} id=\"email\" placeholder=\"Email address\" className=\"form-control\" />\n            </Col>\n          </Row>\n\n          <Row className=\"mt-3\">\n            <Col xs=\"12\" xl=\"12\">\n              <label htmlFor=\"businessAddress\">Business Address</label>\n              <Input onChange={(e) => handleBusinessAddress(e)} value={BusinessAddress} id=\"businessAddress\" placeholder=\"Business address\" className=\"form-control\" />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default BusinessInformation;","/home/onoja/Documents/applications/gare-finance/gare-client/src/components/dasboard/payment/Payment.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/store/reducers/index.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/store/reducers/onboarding_reducer.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/store/actions/actions_onboarding/index.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/store/actions/account/index.js",[],"/home/onoja/Documents/applications/gare-finance/gare-client/src/store/actions/action_file_upload/index.js",["281"],"import fetch from \"node-fetch\";\n\nexport const UPLOAD_PROFILE_PICTURE_START = \"UPLOAD_PROFILE_PICTURE_START\";\nexport const UPLOAD_PROFILE_PICTURE_SUCCESS = \"UPLOAD_PROFILE_PICTURE_SUCCESS\";\nexport const UPLOAD_PROFILE_PICTURE_FAILED = \"UPLOAD_PROFILE_PICTURE_FAILED\";\n\nexport const UPLOAD_START = \"UPLOAD_START\";\nexport const UPLOAD_SUCCESS = \"UPLOAD_SUCCESS\";\nexport const UPLOAD_FAILED = \"UPLOAD_FAILED\";\n\nconst BASE_URL = process.env.REACT_APP_UPLOAD_URL;\n\nexport const uploadStart = () => {\n  return {\n    type: UPLOAD_START\n  }\n}\n\nexport const uploadSuccess = (data) => {\n  return {\n    type: UPLOAD_SUCCESS,\n    data\n  }\n}\n\nexport const uploadFailed = (error) => {\n  return {\n    type: UPLOAD_FAILED,\n    error\n  }\n}\n\nexport const uploader = (options) => {\n  return dispatch => {\n    dispatch(uploadStart());\n    fetch(`https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_NAME}/image/upload`, options)\n    .then(response => response.json())\n    .then(resp => {\n      dispatch(uploadSuccess(resp));\n    })\n    .catch(err => {\n      dispatch(uploadFailed(err));\n    });\n  }\n}\n\nexport const profilePictureStart = () => {\n  return {\n    type: UPLOAD_PROFILE_PICTURE_START\n  }\n}\n\nexport const profilePictureSuccess = (data) => {\n  return {\n    type: UPLOAD_PROFILE_PICTURE_SUCCESS,\n    data\n  }\n}\n\nexport const profilePictureFailed = (error) => {\n  return {\n    type: UPLOAD_PROFILE_PICTURE_FAILED,\n    error\n  }\n}\n\nexport const profilePicture = (data) => {\n  const formData = new FormData();\n  formData.append(\"file\", data);\n  formData.append('upload_preset', \"gare-upload-preset\");\n  const config = {\n    method: \"POST\",\n    body: formData\n  }\n  return dispatch => {\n    dispatch(profilePictureStart());\n    fetch(`https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_NAME}/image/upload`, config)\n      .then(response => response.json())\n      .then(resp => {\n        dispatch(profilePictureSuccess(resp));\n      })\n      .catch(err => {\n        dispatch(profilePictureFailed(\"Request failed\"));\n      });\n  }\n}",{"ruleId":"282","severity":1,"message":"283","line":6,"column":60,"nodeType":"284","messageId":"285","endLine":6,"endColumn":78},{"ruleId":"286","severity":1,"message":"287","line":161,"column":6,"nodeType":"288","endLine":161,"endColumn":25,"suggestions":"289"},{"ruleId":"282","severity":1,"message":"290","line":36,"column":11,"nodeType":"284","messageId":"285","endLine":36,"endColumn":22},{"ruleId":"286","severity":1,"message":"291","line":49,"column":6,"nodeType":"288","endLine":49,"endColumn":8,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":59,"column":83,"nodeType":"295","messageId":"296","endLine":59,"endColumn":103},{"ruleId":"286","severity":1,"message":"291","line":35,"column":6,"nodeType":"288","endLine":35,"endColumn":8,"suggestions":"297"},{"ruleId":"286","severity":1,"message":"298","line":39,"column":6,"nodeType":"288","endLine":39,"endColumn":8,"suggestions":"299"},{"ruleId":"286","severity":1,"message":"300","line":66,"column":6,"nodeType":"288","endLine":66,"endColumn":14,"suggestions":"301"},{"ruleId":"286","severity":1,"message":"302","line":72,"column":6,"nodeType":"288","endLine":72,"endColumn":18,"suggestions":"303"},{"ruleId":"286","severity":1,"message":"304","line":84,"column":6,"nodeType":"288","endLine":84,"endColumn":15,"suggestions":"305"},{"ruleId":"286","severity":1,"message":"306","line":91,"column":6,"nodeType":"288","endLine":91,"endColumn":15,"suggestions":"307"},{"ruleId":"286","severity":1,"message":"308","line":98,"column":6,"nodeType":"288","endLine":98,"endColumn":15,"suggestions":"309"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":28,"nodeType":"284","messageId":"285","endLine":1,"endColumn":46},{"ruleId":"282","severity":1,"message":"310","line":5,"column":10,"nodeType":"284","messageId":"285","endLine":5,"endColumn":14},{"ruleId":"282","severity":1,"message":"311","line":5,"column":16,"nodeType":"284","messageId":"285","endLine":5,"endColumn":24},{"ruleId":"282","severity":1,"message":"312","line":29,"column":11,"nodeType":"284","messageId":"285","endLine":29,"endColumn":26},{"ruleId":"282","severity":1,"message":"313","line":31,"column":11,"nodeType":"284","messageId":"285","endLine":31,"endColumn":22},{"ruleId":"286","severity":1,"message":"302","line":61,"column":6,"nodeType":"288","endLine":61,"endColumn":18,"suggestions":"314"},{"ruleId":"286","severity":1,"message":"304","line":73,"column":6,"nodeType":"288","endLine":73,"endColumn":15,"suggestions":"315"},{"ruleId":"286","severity":1,"message":"306","line":80,"column":6,"nodeType":"288","endLine":80,"endColumn":15,"suggestions":"316"},{"ruleId":"286","severity":1,"message":"308","line":87,"column":6,"nodeType":"288","endLine":87,"endColumn":15,"suggestions":"317"},{"ruleId":"282","severity":1,"message":"318","line":3,"column":27,"nodeType":"284","messageId":"285","endLine":3,"endColumn":33},{"ruleId":"293","severity":1,"message":"294","line":53,"column":85,"nodeType":"295","messageId":"296","endLine":53,"endColumn":93},{"ruleId":"282","severity":1,"message":"319","line":2,"column":20,"nodeType":"284","messageId":"285","endLine":2,"endColumn":25},{"ruleId":"282","severity":1,"message":"320","line":15,"column":11,"nodeType":"284","messageId":"285","endLine":15,"endColumn":18},{"ruleId":"282","severity":1,"message":"321","line":15,"column":20,"nodeType":"284","messageId":"285","endLine":15,"endColumn":30},{"ruleId":"293","severity":1,"message":"294","line":85,"column":39,"nodeType":"295","messageId":"296","endLine":85,"endColumn":62},{"ruleId":"282","severity":1,"message":"319","line":2,"column":20,"nodeType":"284","messageId":"285","endLine":2,"endColumn":25},{"ruleId":"282","severity":1,"message":"322","line":23,"column":11,"nodeType":"284","messageId":"285","endLine":23,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":55,"column":83,"nodeType":"295","messageId":"296","endLine":55,"endColumn":103},{"ruleId":"286","severity":1,"message":"323","line":113,"column":6,"nodeType":"288","endLine":113,"endColumn":9,"suggestions":"324"},{"ruleId":"282","severity":1,"message":"319","line":2,"column":20,"nodeType":"284","messageId":"285","endLine":2,"endColumn":25},{"ruleId":"282","severity":1,"message":"325","line":5,"column":10,"nodeType":"284","messageId":"285","endLine":5,"endColumn":28},{"ruleId":"286","severity":1,"message":"326","line":81,"column":6,"nodeType":"288","endLine":81,"endColumn":18,"suggestions":"327"},{"ruleId":"286","severity":1,"message":"328","line":89,"column":6,"nodeType":"288","endLine":89,"endColumn":17,"suggestions":"329"},{"ruleId":"286","severity":1,"message":"287","line":307,"column":6,"nodeType":"288","endLine":307,"endColumn":41,"suggestions":"330"},{"ruleId":"286","severity":1,"message":"302","line":459,"column":6,"nodeType":"288","endLine":459,"endColumn":31,"suggestions":"331"},{"ruleId":"332","severity":1,"message":"333","line":467,"column":43,"nodeType":"334","messageId":"335","endLine":467,"endColumn":62,"fix":"336"},{"ruleId":"293","severity":1,"message":"294","line":48,"column":96,"nodeType":"295","messageId":"296","endLine":48,"endColumn":116},{"ruleId":"282","severity":1,"message":"337","line":11,"column":7,"nodeType":"284","messageId":"285","endLine":11,"endColumn":15},"no-unused-vars","'DollarCircleFilled' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.","ArrayExpression",["338"],"'userDetails' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'account'. Either include it or remove the dependency array.",["339"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["340"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["341"],"React Hook useEffect has a missing dependency: 'handleCreditLogin'. Either include it or remove the dependency array.",["342"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["343"],"React Hook useEffect has missing dependencies: 'personalLoan.pageOfItems' and 'personalLoan.pager'. Either include them or remove the dependency array.",["344"],"React Hook useEffect has missing dependencies: 'businessLoan.pageOfItems' and 'businessLoan.pager'. Either include them or remove the dependency array.",["345"],"React Hook useEffect has missing dependencies: 'salaryLoan.pageOfItems' and 'salaryLoan.pager'. Either include them or remove the dependency array.",["346"],"'Card' is defined but never used.","'CardBody' is defined but never used.","'convertedAmount' is assigned a value but never used.","'amountToPay' is assigned a value but never used.",["347"],["348"],["349"],["350"],"'Button' is defined but never used.","'Input' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'isMenuOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.accountName', 'params.accountNumber', 'params.address', 'params.bankName', 'params.bookingStatus', 'params.businessAddress', 'params.businessEmail', 'params.businessName', 'params.bvn', 'params.dateOfBirth', 'params.email', 'params.fullName', 'params.idCard', 'params.jobEndDate', 'params.jobStartDate', 'params.phone', 'params.registrationNumber', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["351"],"'ConsoleSqlOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'account.error'. Either include it or remove the dependency array.",["352"],"React Hook useEffect has missing dependencies: 'upload.error', 'upload.idCard', and 'upload.success'. Either include them or remove the dependency array.",["353"],["354"],["355"],"no-whitespace-before-property","Unexpected whitespace before property length.","MemberExpression","unexpectedWhitespace",{"range":"356","text":"357"},"'BASE_URL' is assigned a value but never used.",{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"360","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"367","fix":"375"},{"desc":"369","fix":"376"},{"desc":"371","fix":"377"},{"desc":"373","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},[12522,12524],".","Update the dependencies array to be: [photo, dispatch, options]",{"range":"389","text":"390"},"Update the dependencies array to be: [account]",{"range":"391","text":"392"},{"range":"393","text":"392"},"Update the dependencies array to be: [dispatch, userId]",{"range":"394","text":"395"},"Update the dependencies array to be: [cred, handleCreditLogin]",{"range":"396","text":"397"},"Update the dependencies array to be: [allLoans, userId]",{"range":"398","text":"399"},"Update the dependencies array to be: [loans, personalLoan.pageOfItems, personalLoan.pager]",{"range":"400","text":"401"},"Update the dependencies array to be: [businessLoan.pageOfItems, businessLoan.pager, loans]",{"range":"402","text":"403"},"Update the dependencies array to be: [loans, salaryLoan.pageOfItems, salaryLoan.pager]",{"range":"404","text":"405"},{"range":"406","text":"399"},{"range":"407","text":"401"},{"range":"408","text":"403"},{"range":"409","text":"405"},"Update the dependencies array to be: [params.accountName, params.accountNumber, params.address, params.bankName, params.bookingStatus, params.businessAddress, params.businessEmail, params.businessName, params.bvn, params.dateOfBirth, params.email, params.fullName, params.idCard, params.jobEndDate, params.jobStartDate, params.phone, params.registrationNumber, values]",{"range":"410","text":"411"},"Update the dependencies array to be: [account.error, accounts]",{"range":"412","text":"413"},"Update the dependencies array to be: [id_card, upload.error, upload.idCard, upload.success]",{"range":"414","text":"415"},"Update the dependencies array to be: [meansOfIdentification, dispatch, options]",{"range":"416","text":"417"},"Update the dependencies array to be: [profilePict, dispatch, userId]",{"range":"418","text":"419"},[4901,4920],"[photo, dispatch, options]",[1782,1784],"[account]",[1715,1717],[1671,1673],"[dispatch, userId]",[2277,2285],"[cred, handleCreditLogin]",[2871,2883],"[allLoans, userId]",[3414,3423],"[loans, personalLoan.pageOfItems, personalLoan.pager]",[3653,3662],"[businessLoan.pageOfItems, businessLoan.pager, loans]",[3878,3887],"[loans, salaryLoan.pageOfItems, salaryLoan.pager]",[2530,2542],[3073,3082],[3312,3321],[3537,3546],[3046,3049],"[params.accountName, params.accountNumber, params.address, params.bankName, params.bookingStatus, params.businessAddress, params.businessEmail, params.businessName, params.bvn, params.dateOfBirth, params.email, params.fullName, params.idCard, params.jobEndDate, params.jobStartDate, params.phone, params.registrationNumber, values]",[3833,3845],"[account.error, accounts]",[4045,4056],"[id_card, upload.error, upload.idCard, upload.success]",[9177,9212],"[meansOfIdentification, dispatch, options]",[12330,12355],"[profilePict, dispatch, userId]"]